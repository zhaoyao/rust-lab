!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AIO	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    const AIO: usize = 1 << 4;$/;"	c
ATYP_DOMAIN	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const ATYP_DOMAIN: u8 = 3;$/;"	c
ATYP_IPV4	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const ATYP_IPV4: u8 = 1;$/;"	c
ATYP_IPV6	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const ATYP_IPV6: u8 = 4;$/;"	c
Address	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl Address {$/;"	i
Address	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub enum Address {$/;"	g
Algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^pub enum Algorithm {$/;"	g
AndThen	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/and_then.rs	/^pub struct AndThen<A, B, F> where A: Future, B: IntoFuture {$/;"	s
AndThen	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^pub struct AndThen<S, F, U>$/;"	s
ArcNode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^struct ArcNode<T>(PhantomData<T>);$/;"	s
ArcNode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^struct ArcNode<U>(PhantomData<U>);$/;"	s
ArcWrapped	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^struct ArcWrapped<T>(PhantomData<T>);$/;"	s
AssertKinds	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^trait AssertKinds: Send + Sync + Clone {}$/;"	t
AssertSend	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^trait AssertSend: Send {}$/;"	t
AssertSync	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^        trait AssertSync: Sync {}$/;"	t
Async	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^pub enum Async<T> {$/;"	g
AsyncSink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^pub enum AsyncSink<T> {$/;"	g
AtomicTask	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^pub struct AtomicTask {$/;"	s
BE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub type BE = BigEndian;$/;"	T
BasicClientHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^pub struct BasicClientHandle {$/;"	s
BiLock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^pub struct BiLock<T> {$/;"	s
BiLockAcquire	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^pub struct BiLockAcquire<T> {$/;"	s
BiLockAcquired	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^pub struct BiLockAcquired<T> {$/;"	s
BiLockGuard	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^pub struct BiLockGuard<'a, T: 'a> {$/;"	s
BigEndian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub enum BigEndian {}$/;"	g
BinDecoder	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^pub struct BinDecoder<'a> {$/;"	s
BinEncoder	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^pub struct BinEncoder<'a> {$/;"	s
BinSerializable	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^pub trait BinSerializable<S: Sized> {$/;"	t
BitMapState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^enum BitMapState {$/;"	g
BlockError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct BlockError<T> {$/;"	s
Bomb	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^                struct Bomb<'a, T: 'a> {$/;"	s
Bomb	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^                struct Bomb<'a, U: Unpark + 'a> {$/;"	s
Borrow	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^struct Borrow<'a, U: 'a> {$/;"	s
BorrowedEvents	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct BorrowedEvents<'a>(marker::PhantomData<&'a ()>);$/;"	s
BorrowedEvents	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub enum BorrowedEvents<'a> {$/;"	g
BorrowedTask	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub struct BorrowedTask<'a> {$/;"	s
BorrowedUnpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct BorrowedUnpark<'a> {$/;"	s
BorrowedUnpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub enum BorrowedUnpark<'a> {$/;"	g
BoxFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    pub type BoxFuture<T, E> = ::std::boxed::Box<Future<Item = T, Error = E> + Send>;$/;"	T
BoxIoFuture	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub type BoxIoFuture<T> = Box<Future<Item = T, Error = io::Error> + Send>;$/;"	T
BoxSink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    pub type BoxSink<T, E> = ::std::boxed::Box<Sink<SinkItem = T, SinkError = E> +$/;"	T
BoxStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    pub type BoxStream<T, E> = ::std::boxed::Box<Stream<Item = T, Error = E> + Send>;$/;"	T
BsDebug	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/debug.rs	/^pub struct BsDebug<'a>(pub &'a [u8]);$/;"	s
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^pub trait Buf {$/;"	t
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf = Option<[u8; 1]>;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf = Self;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf = io::Cursor<&'a [u8]>;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf = io::Cursor<&'static [u8]>;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf = io::Cursor<Vec<u8>>;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    type Buf: Buf;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type Buf = Cursor<&'a BytesMut>;$/;"	T
Buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type Buf = Cursor<Self>;$/;"	T
BufClientStreamHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^pub struct BufClientStreamHandle {$/;"	s
BufMut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^pub trait BufMut {$/;"	t
BufStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^pub type BufStream = Stream<Item=(Vec<u8>, SocketAddr), Error=io::Error>;$/;"	T
BufStreamHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^pub type BufStreamHandle = UnboundedSender<(Vec<u8>, SocketAddr)>;$/;"	T
Buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^pub struct Buffer<S: Sink> {$/;"	s
BufferUnordered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^pub struct BufferUnordered<S>$/;"	s
Buffered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^pub struct Buffered<S>$/;"	s
Builder	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/builder.rs	/^pub struct Builder {$/;"	s
ByteOrder	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub trait ByteOrder$/;"	t
Bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^pub struct Bytes {$/;"	s
BytesMut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^pub struct BytesMut {$/;"	s
CMD_BIND	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const CMD_BIND: u8 = 2;$/;"	c
CMD_CONNECT	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const CMD_CONNECT: u8 = 1;$/;"	c
CMD_UDP_ASSOCIATE	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const CMD_UDP_ASSOCIATE: u8 = 3;$/;"	c
COMPLETE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^const COMPLETE: usize = 3;$/;"	c
COMPLETE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^const COMPLETE: usize = 3;      \/\/ No transitions out$/;"	c
CURRENT_THREAD_NOTIFY	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    static CURRENT_THREAD_NOTIFY: Arc<ThreadNotify> = Arc::new(ThreadNotify {$/;"	c
Canceled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub struct Canceled;$/;"	s
CatchUnwind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^pub struct CatchUnwind<F> where F: Future {$/;"	s
CatchUnwind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^pub struct CatchUnwind<S> where S: Stream {$/;"	s
CatchUnwindState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^enum CatchUnwindState<S> {$/;"	g
Chain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^pub struct Chain<T, U> {$/;"	s
Chain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/chain.rs	/^pub enum Chain<A, B, C> where A: Future {$/;"	g
Chain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^pub struct Chain<S1, S2> {$/;"	s
Chunks	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^pub struct Chunks<S>$/;"	s
Client	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^pub struct Client<C: ClientConnection> {$/;"	s
ClientConnection	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_connection.rs	/^pub trait ClientConnection: Sized+Debug {$/;"	t
ClientFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^pub struct ClientFuture<S: Stream<Item=Vec<u8>, Error=io::Error>> {$/;"	s
ClientHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^pub trait ClientHandle: Clone {$/;"	t
ClientHandler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^struct ClientHandler {$/;"	s
ClientResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type ClientResult<T> = Result<T, ClientError>;$/;"	T
ClientStreamHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^pub trait ClientStreamHandle {$/;"	t
Collect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^pub struct Collect<S> where S: Stream {$/;"	s
Concat	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^pub struct Concat<S>$/;"	s
Concat2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^pub struct Concat2<S>$/;"	s
ConcatSafe	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^struct ConcatSafe<S>$/;"	s
Context	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct Context<'a> {$/;"	s
CurrentRunner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^struct CurrentRunner {$/;"	s
CurrentThread	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct CurrentThread<P: Park = ParkThread> {$/;"	s
DNSClass	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^pub enum DNSClass {$/;"	g
DNSKEY	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^pub struct DNSKEY { zone_key: bool, secure_entry_point: bool, revoke: bool, algorithm: Algorithm,$/;"	s
DS	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^pub struct DS { key_tag: u16, algorithm: Algorithm, digest_type: DigestType, digest: Vec<u8> }$/;"	s
DecodeResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type DecodeResult<T> = Result<T, DecodeError>;$/;"	T
Dequeue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^enum Dequeue<T> {$/;"	g
Dequeue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^enum Dequeue<U> {$/;"	g
DigestType	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^pub enum DigestType {$/;"	g
DnsSecResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type DnsSecResult<T> = Result<T, DnsSecError>;$/;"	T
DoublePanic	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    struct DoublePanic;$/;"	s
DoublePanic	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    struct DoublePanic;$/;"	s
Downstream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^struct Downstream<S: Sink> {$/;"	s
ERROR	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    const ERROR: usize = 1 << 3;$/;"	c
Edns	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^pub struct Edns {$/;"	s
EdnsCode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub enum EdnsCode {$/;"	g
EdnsOption	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub enum EdnsOption {$/;"	g
Either	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/either.rs	/^pub enum Either<A, B> {$/;"	g
ElemState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^enum ElemState<T> where T: Future {$/;"	g
Empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/empty.rs	/^pub struct Empty<T, E> {$/;"	s
Empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/empty.rs	/^pub struct Empty<T, E> {$/;"	s
EncodeMode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^pub enum EncodeMode { Signing, Normal }$/;"	g
EncodeResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type EncodeResult = Result<(), EncodeError>;$/;"	T
Entered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct Entered<'a, P: Park + 'a> {$/;"	s
Err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  type Err = DecodeError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/and_then.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/either.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/empty.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^    type Error = <<A as Future>::Item as IntoFuture>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^    type Error = <F::Item as Stream>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/from_err.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/inspect.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/into_stream.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^    type Error = <I::Item as IntoFuture>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^    type Error = R::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map_err.rs	/^    type Error = U;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^        type Error = F::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Error = F::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/option.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/or_else.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/poll_fn.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^    type Error = (A::Error, SelectNext<A, B>);$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select2.rs	/^    type Error = Either<(A::Error, B), (B::Error, A)>;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^    type Error = (A::Error, usize, Vec<A>);$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_ok.rs	/^    type Error = A::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    type Error = SharedError<F::Error>;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/then.rs	/^    type Error = B::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/resultstream.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    type Error = S::SinkError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    type Error = S::SinkError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    type Error = T::SinkError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    type Error = Box<Any + Send>;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    type Error = SendError<T, E>;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    type Error = <S as Stream>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/empty.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    type Error = <S::Item as Stream>::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/for_each.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    type Error = (S::Error, S);$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    type Error = T::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_ok.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_result.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    type Error = U;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^        type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    type Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/once.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    type Error = U::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/poll_fn.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/repeat.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/select.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    type Error = S::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    type Error = U::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^    type Error = Fut::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/zip.rs	/^    type Error = S1::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    type Error = Canceled;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    type Error = E;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/shutdown.rs	/^    type Error = ();$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  type Error = ClientError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^  type Error = F::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  type Error = ClientError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  type Error = ClientError;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^  type Error = io::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  type Error = io::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^  type Error = io::Error;$/;"	T
Error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  type Error = io::Error;$/;"	T
Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl Error {$/;"	i
Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub struct Error {$/;"	s
Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^    type Error = io::Error;$/;"	T
EventSet	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub trait EventSet: Send + Sync + 'static {$/;"	t
Execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct Execute<S: Stream> {$/;"	s
Execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub struct Execute<F: Future> {$/;"	s
Execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct Execute<S: Stream> {$/;"	s
Execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub struct Execute<F: Future> {$/;"	s
ExecuteError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub struct ExecuteError<F> {$/;"	s
ExecuteErrorKind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub enum ExecuteErrorKind {$/;"	g
ExecuteInner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^struct ExecuteInner<T> {$/;"	s
Executor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub trait Executor<F: Future<Item = (), Error = ()>> {$/;"	t
Executor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub trait Executor: Send + Sync + 'static {$/;"	t
Fanout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^pub struct Fanout<A: Sink, B: Sink> {$/;"	s
Filter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^pub struct Filter<S, F> {$/;"	s
FilterMap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^pub struct FilterMap<S, F> {$/;"	s
Flatten	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^pub struct Flatten<A> where A: Future, A::Item: IntoFuture {$/;"	s
Flatten	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^pub struct Flatten<S>$/;"	s
FlattenStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^pub struct FlattenStream<F>$/;"	s
Flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^pub struct Flush<S> {$/;"	s
Fold	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^pub struct Fold<S, F, Fut, T> where Fut: IntoFuture {$/;"	s
ForEach	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/for_each.rs	/^pub struct ForEach<S, F, U> where U: IntoFuture {$/;"	s
Forward	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^pub struct Forward<T: Stream, U> {$/;"	s
FromBuf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/from_buf.rs	/^pub trait FromBuf {$/;"	t
FromErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/from_err.rs	/^pub struct FromErr<A, E> where A: Future {$/;"	s
FromErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^pub struct FromErr<S, E> {$/;"	s
FromResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^type FromResult = Result<RecordType, DecodeError>;$/;"	T
Fuse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^pub struct Fuse<A: Future> {$/;"	s
Fuse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^pub struct Fuse<S> {$/;"	s
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            type Future = $Join<A::Future, $($B::Future),*>;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Future = F;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Future = FutureResult<T, E>;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Future: Future<Item=Self, Error=Self::Error>;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Future: Future<Item=Self::Item, Error=Self::Error>;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub trait Future {$/;"	t
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^    type Future = FutureResult<(), ()>;$/;"	T
Future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^    type Future = futures2::future::FutureResult<(), ()>;$/;"	T
Future for WriteBytes	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^impl<W, B> Future for WriteBytes<W, B>$/;"	i
FutureExt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/util/future.rs	/^pub trait FutureExt: Future {$/;"	t
FutureFrom	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub trait FutureFrom<T>: Sized {$/;"	t
FutureResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^pub struct FutureResult<T, E> {$/;"	s
FutureSender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^pub struct FutureSender<T, E> {$/;"	s
FuturesOrdered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^pub struct FuturesOrdered<T>$/;"	s
FuturesUnordered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^pub struct FuturesUnordered<F> {$/;"	s
GET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^static GET: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
HUP	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    const HUP: usize = 1 << 2;$/;"	c
HandshakeRep	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl HandshakeRep {$/;"	i
HandshakeRep	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub struct HandshakeRep {$/;"	s
HandshakeReq	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl HandshakeReq {$/;"	i
HandshakeReq	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub struct HandshakeReq {$/;"	s
Header	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^pub struct Header {$/;"	s
I24_MAX	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub const I24_MAX: i32 = 8_388_607;$/;"	c
I64_MAX	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub const I64_MAX: u64 = ::core::i64::MAX as u64;$/;"	c
IDLE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^const IDLE: usize = 0;$/;"	c
IDLE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^const IDLE: usize = 0;$/;"	c
INIT	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^static INIT: Once = ONCE_INIT;$/;"	c
INIT_STATE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^const INIT_STATE: usize = OPEN_MASK;$/;"	c
INLINE_CAP	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_CAP: usize = 4 * 4 - 1;$/;"	c
INLINE_CAP	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_CAP: usize = 4 * 8 - 1;$/;"	c
INLINE_DATA_OFFSET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_DATA_OFFSET: isize = 0;$/;"	c
INLINE_DATA_OFFSET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_DATA_OFFSET: isize = 1;$/;"	c
INLINE_LEN_MASK	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_LEN_MASK: usize = 0b11111100;$/;"	c
INLINE_LEN_OFFSET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const INLINE_LEN_OFFSET: usize = 2;$/;"	c
IdHasher	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^pub struct IdHasher {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^struct Inner {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^struct Inner<F: Future> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^enum Inner<E> {$/;"	g
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^struct Inner<U> {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^struct Inner {$/;"	s
Inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^struct Inner {$/;"	s
Inspect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/inspect.rs	/^pub struct Inspect<A, F> where A: Future {$/;"	s
Inspect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^pub struct Inspect<S, F> where S: Stream {$/;"	s
InspectErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^pub struct InspectErr<S, F> where S: Stream {$/;"	s
IntoBuf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^pub trait IntoBuf {$/;"	t
IntoFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^pub trait IntoFuture {$/;"	t
IntoIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type IntoIter = Iter<Cursor<&'a Bytes>>;$/;"	T
IntoIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type IntoIter = Iter<Cursor<&'a BytesMut>>;$/;"	T
IntoIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type IntoIter = Iter<Cursor<Bytes>>;$/;"	T
IntoIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type IntoIter = Iter<Cursor<BytesMut>>;$/;"	T
IntoIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  type IntoIter = Chain<vec::IntoIter<Record>, vec::IntoIter<Record>>;$/;"	T
IntoRecordSet	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^pub trait IntoRecordSet: Sized {$/;"	t
IntoStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/into_stream.rs	/^pub struct IntoStream<F: Future> {$/;"	s
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    type Item = u8;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type Item = u8;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/and_then.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    type Item = Result<F::Item, F::Error>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/either.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/empty.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^    type Item = <<A as Future>::Item as IntoFuture>::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^    type Item = <F::Item as Stream>::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/from_err.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/inspect.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/into_stream.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            type Item = (A::Item, $($B::Item),*);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^    type Item = Vec<<I::Item as IntoFuture>::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^    type Item = R::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map.rs	/^    type Item = U;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map_err.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^        type Item = F::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Item = F::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    type Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/option.rs	/^    type Item = Option<T>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/or_else.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/poll_fn.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^    type Item = (A::Item, SelectNext<A, B>);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^    type Item = A::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select2.rs	/^    type Item = Either<(A::Item, B), (B::Item, A)>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^    type Item = (A::Item, usize, Vec<A>);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_ok.rs	/^    type Item = (A::Item, Vec<A>);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    type Item = SharedItem<F::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/then.rs	/^    type Item = B::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/resultstream.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    type Item = S;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    type Item = S;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    type Item = (T, U);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    type Item = U::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    type Item = <S::Item as IntoFuture>::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^    type Item = S1::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    type Item = Sender<T, E>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    type Item = Vec<<S as Stream>::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^    type Item = Vec<S::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^    type Item = Option<S::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/empty.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    type Item = B;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    type Item = <S::Item as Stream>::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/for_each.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    type Item = (T, U);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    type Item = (Option<S::Item>, S);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    type Item = OrderWrapper<T::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    type Item = &'a mut F;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    type Item = T::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_ok.rs	/^    type Item = I::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_result.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    type Item = U;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^    type Item = MergedItem<S1::Item, S2::Item>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^        type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    type Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/once.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/poll_fn.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/repeat.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/select.rs	/^    type Item = S1::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    type Item = S::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    type Item = U::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^    type Item = It;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^    type Item = Result<S::Item, S::Error>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/zip.rs	/^    type Item = (S1::Item, S2::Item);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    type Item = BiLockAcquired<T>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type Item = I;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type Item = I;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    type Item = T;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/shutdown.rs	/^    type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  type Item = ();$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^  type Item = F::Item;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  type Item = Message;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  type Item = Message;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  type Item = Algorithm;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  type Item = Record;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^  type Item = Vec<u8>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  type Item = (Vec<u8>, SocketAddr);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^  type Item = Vec<u8>;$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  type Item = (Vec<u8>, SocketAddr);$/;"	T
Item	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  type Item = std::net::UdpSocket;$/;"	T
Item	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^    type Item = W;$/;"	T
Iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^pub struct Iter<T> {$/;"	s
Iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter.rs	/^pub struct Iter<I>(IterResult<I>);$/;"	s
IterMut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^pub struct IterMut<'a, F: 'a> {$/;"	s
IterOk	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_ok.rs	/^pub struct IterOk<I, E> {$/;"	s
IterResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_result.rs	/^pub struct IterResult<I> {$/;"	s
JoinAll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^pub struct JoinAll<I>$/;"	s
KIND_ARC	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const KIND_ARC: usize = 0b00;$/;"	c
KIND_INLINE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const KIND_INLINE: usize = 0b01;$/;"	c
KIND_MASK	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const KIND_MASK: usize = 0b11;$/;"	c
KIND_STATIC	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const KIND_STATIC: usize = 0b10;$/;"	c
KIND_VEC	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const KIND_VEC: usize = 0b11;$/;"	c
KeyPair	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^pub enum KeyPair {$/;"	g
LE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub type LE = LittleEndian;$/;"	T
LIO	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    const LIO: usize = 1 << 5;$/;"	c
LabelParseState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^enum LabelParseState {$/;"	g
Lazy	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^pub struct Lazy<F, R: IntoFuture> {$/;"	s
Lexer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^pub struct Lexer<'a> {$/;"	s
LexerResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type LexerResult<T> = Result<T, LexerError>;$/;"	T
List	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^struct List<U> {$/;"	s
LittleEndian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub enum LittleEndian {}$/;"	g
LocalKey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct LocalKey;$/;"	s
LocalKey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^pub struct LocalKey<T> {$/;"	s
LocalMap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct LocalMap;$/;"	s
LocalMap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^pub type LocalMap = RefCell<HashMap<TypeId,$/;"	T
Lock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^pub struct Lock<T> {$/;"	s
Loop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^pub enum Loop<T, S> {$/;"	g
LoopFn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^pub struct LoopFn<A, F> where A: IntoFuture {$/;"	s
MAX_BUFFER	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^const MAX_BUFFER: usize = MAX_CAPACITY >> 1;$/;"	c
MAX_CAPACITY	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^const MAX_CAPACITY: usize = !(OPEN_MASK);$/;"	c
MAX_ORIGINAL_CAPACITY_WIDTH	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const MAX_ORIGINAL_CAPACITY_WIDTH: usize = 17;$/;"	c
MAX_VEC_POS	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const MAX_VEC_POS: usize = usize::MAX >> VEC_POS_OFFSET;$/;"	c
METH_GSSAPI	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const METH_GSSAPI: u8 = 1;$/;"	c
METH_NO_AUTH	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const METH_NO_AUTH: u8 = 0;$/;"	c
METH_USER_PASS	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const METH_USER_PASS: u8 = 2;$/;"	c
MIN_ORIGINAL_CAPACITY_WIDTH	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const MIN_ORIGINAL_CAPACITY_WIDTH: usize = 10;$/;"	c
MX	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^pub struct MX { preference: u16, exchange: Name }$/;"	s
Map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map.rs	/^pub struct Map<A, F> where A: Future {$/;"	s
Map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^pub struct Map<S, F> {$/;"	s
MapErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map_err.rs	/^pub struct MapErr<A, F> where A: Future {$/;"	s
MapErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^pub struct MapErr<S, F> {$/;"	s
MaybeDone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^enum MaybeDone<A: Future> {$/;"	g
MemoizeClientHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^pub struct MemoizeClientHandle<H: ClientHandle> {$/;"	s
Merge	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^pub struct Merge<S1, S2: Stream> {$/;"	s
MergedItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^pub enum MergedItem<I1, I2> {$/;"	g
Message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^pub struct Message {$/;"	s
Message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  type Message = ();$/;"	T
Message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  type Message = ();$/;"	T
MessageStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^pub type MessageStream = Stream<Item=Message, Error=io::Error>;$/;"	T
MessageStreamHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^pub type MessageStreamHandle = UnboundedSender<Message>;$/;"	T
MessageType	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^pub enum MessageType {$/;"	g
NEXT_ID	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    static NEXT_ID: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
NOTIFY	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^const NOTIFY: usize = 1;$/;"	c
NOTIFYING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^const NOTIFYING: usize = 0b10;$/;"	c
NOT_VEC_POS_MASK	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const NOT_VEC_POS_MASK: usize = 0b11111;$/;"	c
NSEC	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^pub struct NSEC { next_domain_name: Name, type_bit_maps: Vec<RecordType> }$/;"	s
NSEC3	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub struct NSEC3{ hash_algorithm: Nsec3HashAlgorithm, opt_out: bool, iterations: u16, salt: Vec<u8>,$/;"	s
NSEC3PARAM	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^pub struct NSEC3PARAM{ hash_algorithm: Nsec3HashAlgorithm, opt_out: bool, iterations: u16, salt: Vec<u8> }$/;"	s
NULL	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^pub struct NULL { anything: Option<Vec<u8>> }$/;"	s
Name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^pub struct Name {$/;"	s
NativeEndian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub type NativeEndian = BigEndian;$/;"	T
NativeEndian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub type NativeEndian = LittleEndian;$/;"	T
NetworkEndian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^pub type NetworkEndian = BigEndian;$/;"	T
NextRandomUdpSocket	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^struct NextRandomUdpSocket {$/;"	s
Node	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^struct Node<T> {$/;"	s
Node	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^struct Node<T> {$/;"	s
Node	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^struct Node<U> {$/;"	s
NodeToHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^struct NodeToHandle<'a, T: 'a>(&'a Arc<Node<T>>);$/;"	s
Notifier	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^struct Notifier {$/;"	s
Notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub trait Notify: Send + Sync {$/;"	t
Notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^pub struct Notify<'a, U: 'a>(&'a Arc<Node<U>>);$/;"	s
NotifyHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub struct NotifyHandle {$/;"	s
Nsec3HashAlgorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^pub enum Nsec3HashAlgorithm {$/;"	g
OPEN_MASK	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^const OPEN_MASK: usize = usize::MAX - (usize::MAX >> 1);$/;"	c
OPT	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub struct OPT { options: HashMap<EdnsCode, EdnsOption> }$/;"	s
ORIGINAL_CAPACITY_MASK	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const ORIGINAL_CAPACITY_MASK: usize = 0b11100;$/;"	c
ORIGINAL_CAPACITY_OFFSET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const ORIGINAL_CAPACITY_OFFSET: usize = 2;$/;"	c
Once	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/once.rs	/^pub struct Once<T, E>(Option<Result<T, E>>);$/;"	s
OneOf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^enum OneOf<A, B> where A: Future, B: Future {$/;"	g
OpCode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/op_code.rs	/^pub enum OpCode {$/;"	g
Opaque	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^pub trait Opaque: Send {}$/;"	t
OptReadState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^enum OptReadState {$/;"	g
OrElse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/or_else.rs	/^pub struct OrElse<A, B, F> where A: Future, B: IntoFuture {$/;"	s
OrElse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^pub struct OrElse<S, F, U>$/;"	s
OrderWrapper	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^struct OrderWrapper<T> {$/;"	s
Output	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^    type Output = String;$/;"	T
POISONED	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^const POISONED: usize = 4;$/;"	c
POLLING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^const POLLING: usize = 1;$/;"	c
POLLING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^const POLLING: usize = 1;       \/\/ --> WAITING, REPOLL, or COMPLETE$/;"	c
PTR_WIDTH	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const PTR_WIDTH: usize = 32;$/;"	c
PTR_WIDTH	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const PTR_WIDTH: usize = 64;$/;"	c
ParseResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/mod.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	T
ParseState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^enum ParseState {$/;"	g
Parser	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master.rs	/^pub struct Parser;$/;"	s
Peekable	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^pub struct Peekable<S: Stream> {$/;"	s
Poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^pub type Poll<T, E> = Result<Async<T>, E>;$/;"	T
PollEvented	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^pub struct PollEvented<E> {$/;"	s
PollFn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PollFn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PopResult	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^pub enum PopResult<T> {$/;"	g
QOS_MAX_RECEIVE_MSGS	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^const QOS_MAX_RECEIVE_MSGS: usize = 100; \/\/ max number of messages to receive from the UDP socket$/;"	c
Query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^pub struct Query {$/;"	s
Queue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^pub struct Queue<T> {$/;"	s
RData	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^pub enum RData {$/;"	g
READ	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^const READ: usize = 1 << 0;$/;"	c
REGISTERING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^const REGISTERING: usize = 0b01;$/;"	c
RELAY_REP_RSV	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^const RELAY_REP_RSV: u8 = 0;$/;"	c
REPOLL	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^const REPOLL: usize = 2;$/;"	c
REPOLL	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^const REPOLL: usize = 2;        \/\/ --> POLLING$/;"	c
RESPONSE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^const RESPONSE: Token = Token(0);$/;"	c
RESPONSE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^const RESPONSE: Token = Token(0);$/;"	c
ROOT_ANCHOR	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^const ROOT_ANCHOR: &'static str = include_str!("Kjqmt7v.pem");$/;"	c
RcFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^pub struct RcFuture<F: Future>$/;"	s
ReadBytesExt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^pub trait ReadBytesExt: io::Read {$/;"	t
ReadTcpState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^enum ReadTcpState {$/;"	g
Reader	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^pub struct Reader<B> {$/;"	s
Receiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^pub struct Receiver<T, E> {$/;"	s
Receiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
ReceiverTask	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^struct ReceiverTask {$/;"	s
Record	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^pub struct Record {$/;"	s
RecordSet	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^pub struct RecordSet {$/;"	s
RecordType	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^pub enum RecordType {$/;"	g
RelayRep	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl RelayRep {$/;"	i
RelayRep	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub struct RelayRep {$/;"	s
RelayRequest	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl RelayRequest {$/;"	i
RelayRequest	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub struct RelayRequest {$/;"	s
RepCode	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub enum RepCode {$/;"	g
Repeat	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/repeat.rs	/^pub struct Repeat<T, E>$/;"	s
RequestHandler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/request_handler.rs	/^pub trait RequestHandler {$/;"	t
Reset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^            struct Reset<'a>(&'a AtomicUsize);$/;"	s
Reset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    struct Reset(fn(*mut u8), *mut u8);$/;"	s
Reset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^        struct Reset(*const Cell<*mut u8>, *mut u8);$/;"	s
Reset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^        struct Reset<'a>(&'a CurrentRunner);$/;"	s
Response	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^struct Response {$/;"	s
ResponseCode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^pub enum ResponseCode {$/;"	g
Results	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/resultstream.rs	/^pub struct Results<S: Stream, E> {$/;"	s
RetryClientHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^pub struct RetryClientHandle<H: ClientHandle> {$/;"	s
RetrySendFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^struct RetrySendFuture<H: ClientHandle> {$/;"	s
ReuniteError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^pub struct ReuniteError<T>(pub SplitSink<T>, pub SplitStream<T>);$/;"	s
ReuniteError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^pub struct ReuniteError<T>(pub BiLock<T>, pub BiLock<T>);$/;"	s
RrKey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_key.rs	/^pub struct RrKey { pub name: Name, pub record_type: RecordType }$/;"	s
RrSet	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/mod.rs	/^pub type RrSet = RecordSet;$/;"	T
Rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^struct Rrset {$/;"	s
Run	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub struct Run {$/;"	s
RunError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct RunError {$/;"	s
RunInner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^struct RunInner {$/;"	s
RunTimeoutError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct RunTimeoutError {$/;"	s
Runtime	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^pub struct Runtime {$/;"	s
SET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^static SET: AtomicUsize = ATOMIC_USIZE_INIT;$/;"	c
SIG	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^pub struct SIG { type_covered: RecordType, algorithm: Algorithm, num_labels: u8, original_ttl: u32,$/;"	s
SLEEP	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^const SLEEP: usize = 2;$/;"	c
SOA	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^pub struct SOA { mname: Name, rname: Name, serial: u32,$/;"	s
SRV	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^pub struct SRV { priority: u16, weight: u16, port: u16, target: Name }$/;"	s
Scheduled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^pub struct Scheduled<'a, U: 'a> {$/;"	s
Scheduler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^pub struct Scheduler<U> {$/;"	s
Sealed	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub trait Sealed{}$/;"	t
SecureClientHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^pub struct SecureClientHandle<H: ClientHandle + 'static> {$/;"	s
Select	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^pub struct Select<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
Select	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/select.rs	/^pub struct Select<S1, S2> {$/;"	s
Select2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select2.rs	/^pub struct Select2<A, B> {$/;"	s
SelectAll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^pub struct SelectAll<A> where A: Future {$/;"	s
SelectAllNext	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^pub type SelectAllNext<A> = A;$/;"	T
SelectNext	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^pub struct SelectNext<A, B> where A: Future, B: Future<Item=A::Item, Error=A::Error> {$/;"	s
SelectOk	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_ok.rs	/^pub struct SelectOk<A> where A: Future {$/;"	s
Send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^pub struct Send<S: Sink> {$/;"	s
SendAll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^pub struct SendAll<T, U: Stream> {$/;"	s
SendError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^pub struct SendError<T, E>(Result<T, E>);$/;"	s
SendError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct SendError<T>(T);$/;"	s
SendError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct SendError<T>(T);$/;"	s
Sender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^pub struct Sender<T, E> {$/;"	s
Sender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct Sender<T> {$/;"	s
Sender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
SenderTask	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^struct SenderTask {$/;"	s
Shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^struct Shared {$/;"	s
Shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^pub struct Shared<F: Future> {$/;"	s
Shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^struct Shared<T> {$/;"	s
SharedError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^pub struct SharedError<E> {$/;"	s
SharedItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^pub struct SharedItem<T> {$/;"	s
Shutdown	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/shutdown.rs	/^pub struct Shutdown {$/;"	s
Signer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^pub struct Signer {$/;"	s
Signer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^pub struct Signer;$/;"	s
Sink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^pub trait Sink {$/;"	t
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    type SinkError = A::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    type SinkError = E;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    type SinkError = E;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        type SinkError = (); \/\/ Change this to ! once it stabilizes$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    type SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    type SinkError = Fut::Error;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    type SinkError = S::SinkError;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type SinkError = SendError<T>;$/;"	T
SinkFromErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^pub struct SinkFromErr<S, E> {$/;"	s
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    type SinkItem = A::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        type SinkItem = T;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    type SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    type SinkItem = U;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    type SinkItem = U;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    type SinkItem = S::SinkItem;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    type SinkItem = T;$/;"	T
SinkItem	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    type SinkItem = T;$/;"	T
SinkMapErr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^pub struct SinkMapErr<S, F> {$/;"	s
Skip	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^pub struct Skip<S> {$/;"	s
SkipWhile	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^pub struct SkipWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub struct Spawn<T: ?Sized> {$/;"	s
Spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^pub struct Spawn(());$/;"	s
SpawnHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct SpawnHandle<Item, Error> {$/;"	s
SpawnHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub struct SpawnHandle<T, E> {$/;"	s
SpawnHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct SpawnHandle<Item, Error> {$/;"	s
SpawnHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub struct SpawnHandle<T, E> {$/;"	s
SpawnLocal	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^trait SpawnLocal {$/;"	t
SplitSink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^pub struct SplitSink<S>(BiLock<S>);$/;"	s
SplitStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^pub struct SplitStream<S>(BiLock<S>);$/;"	s
SslErrorStack	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/dnssec_error.rs	/^  pub struct SslErrorStack;$/;"	s
StartSend	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^pub type StartSend<T, E> = Result<AsyncSink<T>, E>;$/;"	T
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^enum State<F>$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^enum State<Fut, T> {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^enum State<S1, S2> {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^enum State<T, F> where F: Future {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^struct State {$/;"	s
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^enum State<T> {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^enum State<T> {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master.rs	/^enum State {$/;"	g
State	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^pub enum State {$/;"	g
StaticRef	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^struct StaticRef<T>(PhantomData<T>);$/;"	s
Stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^pub trait Stream {$/;"	t
StreamFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^pub struct StreamFuture<S> {$/;"	s
StreamHandle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^pub type StreamHandle = UnboundedSender<Vec<u8>>;$/;"	T
SupportedAlgorithms	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^pub struct SupportedAlgorithms {$/;"	s
SupportedAlgorithmsIter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^pub struct SupportedAlgorithmsIter<'a> {$/;"	s
TEST_BYTES	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^const TEST_BYTES: &'static [u8; 8] = b"DEADBEEF";$/;"	c
TEST_BYTES	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^const TEST_BYTES: &'static [u8; 8] = b"DEADBEEF";$/;"	c
TEST_BYTES_LEN	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^const TEST_BYTES_LEN: usize = 8;$/;"	c
TEST_BYTES_LEN	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^const TEST_BYTES_LEN: usize = 8;$/;"	c
TXT	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^pub struct TXT { txt_data: Vec<String> }$/;"	s
Take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^pub struct Take<T> {$/;"	s
Take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^pub struct Take<S> {$/;"	s
TakeWhile	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^pub struct TakeWhile<S, P, R> where S: Stream, R: IntoFuture {$/;"	s
Target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    type Target = [u8];$/;"	T
Target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    type Target = E;$/;"	T
Target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    type Target = T;$/;"	T
Target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    type Target = T;$/;"	T
Target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    type Target = T;$/;"	T
Task	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub struct Task {$/;"	s
Task	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^struct Task(Spawn<Box<Future<Item = (), Error = ()>>>);$/;"	s
Task2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^type Task2 = Box<futures2::Future<Item = (), Error = futures2::Never> + Send>;$/;"	T
TaskExecutor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct TaskExecutor {$/;"	s
TaskExecutor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^pub struct TaskExecutor {$/;"	s
TaskRc	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/task_rc.rs	/^pub struct TaskRc<A> {$/;"	s
TaskUnpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct TaskUnpark {$/;"	s
TaskUnpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub enum TaskUnpark {$/;"	g
TcpClientConnection	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^pub struct TcpClientConnection {$/;"	s
TcpClientStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^pub struct TcpClientStream {$/;"	s
TcpHandler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^pub struct TcpHandler {$/;"	s
TcpState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^pub enum TcpState {$/;"	g
TcpStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^pub struct TcpStream {$/;"	s
TcpType	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^pub enum TcpType {$/;"	g
TestClient	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^  struct TestClient { i: Cell<u16> }$/;"	s
TestClient	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  struct TestClient { last_succeed: bool, retries: u16, attempts: Cell<u16> }$/;"	s
Then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/then.rs	/^pub struct Then<A, B, F> where A: Future, B: IntoFuture {$/;"	s
Then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^pub struct Then<S, F, U>$/;"	s
ThreadNotify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^struct ThreadNotify {$/;"	s
Timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  type Timeout = ();$/;"	T
Timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  type Timeout = ();$/;"	T
Token	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^pub enum Token {$/;"	g
TrustAnchor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^pub struct TrustAnchor {$/;"	s
TrustDnsLogger	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^pub struct TrustDnsLogger { level: LogLevel }$/;"	s
TryLock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^pub struct TryLock<'a, T: 'a> {$/;"	s
TryPark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^enum TryPark {$/;"	g
TrySendError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct TrySendError<T> {$/;"	s
TrySendErrorKind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^enum TrySendErrorKind<T> {$/;"	g
Turn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct Turn(());$/;"	s
TurnError	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub struct TurnError {$/;"	s
U24_MAX	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub const U24_MAX: u32 = 16_777_215;$/;"	c
U64_MAX	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub const U64_MAX: u64 = ::core::u64::MAX;$/;"	c
UdpClientConnection	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^pub struct UdpClientConnection {$/;"	s
UdpClientStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^pub struct UdpClientStream {$/;"	s
UdpHandler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^pub struct UdpHandler {$/;"	s
UdpState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^pub enum UdpState {$/;"	g
UdpStream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^pub struct UdpStream {$/;"	s
UnboundedReceiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedReceiver	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct UnboundedReceiver<T>(Receiver<T>);$/;"	s
UnboundedSender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
UnboundedSender	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub struct UnboundedSender<T>(Sender<T>);$/;"	s
Unfold	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^pub struct Unfold<T, F, Fut> where Fut: IntoFuture {$/;"	s
Unpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub trait Unpark: Send + Sync {$/;"	t
UnparkEvent	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub struct UnparkEvent {$/;"	s
UnparkEvents	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub struct UnparkEvents;$/;"	s
UnparkEvents	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub enum UnparkEvents {$/;"	g
UnparkMutex	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^pub struct UnparkMutex<D> {$/;"	s
UpdateMessage	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^pub trait UpdateMessage: Debug {$/;"	t
VEC_POS_OFFSET	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^const VEC_POS_OFFSET: usize = 5;$/;"	c
VERSION	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub const VERSION: u8 = 5;$/;"	c
Value	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            type Value = $ty;$/;"	T
VerifyRrsetsFuture	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^struct VerifyRrsetsFuture {$/;"	s
WAITING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^const WAITING: usize = 0;$/;"	c
WAITING	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^const WAITING: usize = 0;       \/\/ --> POLLING$/;"	c
WRITE	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^const WRITE: usize = 1 << 1;$/;"	c
Wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/wait.rs	/^pub struct Wait<S> {$/;"	s
Wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^pub struct Wait<S> {$/;"	s
Wi128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub struct Wi128<T>(pub T);$/;"	s
With	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^pub struct With<S, U, F, Fut>$/;"	s
WithFlatMap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^pub struct WithFlatMap<S, U, F, St>$/;"	s
WriteBytes	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^impl<W, B> WriteBytes<W, B>$/;"	i
WriteBytes	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^pub struct WriteBytes<W, B>$/;"	s
WriteBytesExt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^pub trait WriteBytesExt: io::Write {$/;"	t
WriteTcpState	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^enum WriteTcpState {$/;"	g
Writer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^pub struct Writer<B> {$/;"	s
Zip	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/zip.rs	/^pub struct Zip<S1: Stream, S2: Stream> {$/;"	s
_Lazy	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^enum _Lazy<F, R> {$/;"	g
__A	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^                struct __A;$/;"	s
__init	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^            fn __init() -> $t { $e }$/;"	f
__key	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^            fn __key() -> ::std::any::TypeId {$/;"	f
abort	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^fn abort(s: &str) -> ! {$/;"	f
abort	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^fn abort(s: &str) -> ! {$/;"	f
add_additional	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_additional(&mut self, record: Record) { self.add_additional(record); }$/;"	f
add_additional	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_additional(&mut self, record: Record);$/;"	f
add_additional	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_additional(&mut self, record: Record) -> &mut Self { self.additionals.push(record); self }$/;"	f
add_all_answers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_all_answers(&mut self, vector: &[&Record]) -> &mut Self {$/;"	f
add_all_name_servers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_all_name_servers(&mut self, vector: &[&Record]) -> &mut Self {$/;"	f
add_all_pre_requisites	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_all_pre_requisites(&mut self, vector: &[&Record]) { self.add_answers(vector.into_iter().map(|r| (*r).clone())); }$/;"	f
add_all_pre_requisites	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_all_pre_requisites(&mut self, vector: &[&Record]);$/;"	f
add_all_queries	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_all_queries(&mut self, queries: &[Query]) -> &mut Self {$/;"	f
add_all_updates	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_all_updates(&mut self, vector: &[&Record]) { self.add_name_servers(vector.into_iter().map(|r| (*r).clone())); }$/;"	f
add_all_updates	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_all_updates(&mut self, vector: &[&Record]);$/;"	f
add_answer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_answer(&mut self, record: Record) -> &mut Self { self.answers.push(record); self }$/;"	f
add_answers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_answers<R, I>(&mut self, records: R) -> &mut Self$/;"	f
add_label	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn add_label(&mut self, label: Rc<String>) -> &mut Self {$/;"	f
add_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn add_name(&mut self, label: String) -> &mut Self { self.name_labels.add_label(Rc::new(label)); self }$/;"	f
add_name_server	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_name_server(&mut self, record: Record) -> &mut Self { self.name_servers.push(record); self }$/;"	f
add_name_servers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_name_servers<R, I>(&mut self, records: R) -> &mut Self$/;"	f
add_pre_requisite	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_pre_requisite(&mut self, record: Record) { self.add_answer(record); }$/;"	f
add_pre_requisite	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_pre_requisite(&mut self, record: Record);$/;"	f
add_pre_requisites	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_pre_requisites<R,I>(&mut self, records: R)$/;"	f
add_queries	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_queries<Q, I>(&mut self, queries: Q) -> &mut Self$/;"	f
add_query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_query(&mut self, query: Query) -> &mut Self { self.queries.push(query); self }$/;"	f
add_sig0	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn add_sig0(&mut self, record: Record) -> &mut Self {$/;"	f
add_update	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_update(&mut self, record: Record) { self.add_name_server(record); }$/;"	f
add_update	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_update(&mut self, record: Record);$/;"	f
add_updates	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_updates<R,I>(&mut self, records: R)$/;"	f
add_zone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_zone(&mut self, query: Query) { self.add_query(query); }$/;"	f
add_zone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn add_zone(&mut self, query: Query);$/;"	f
additional_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn additional_count(&mut self, additional_count: u16) -> &mut Self { self.additional_count = additional_count; self }$/;"	f
advance	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	f
advance	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn advance(&mut self, cnt: usize);$/;"	f
advance	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    fn advance(&mut self, mut cnt: usize) {$/;"	f
advance	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    fn advance(&mut self, cnt: usize) {$/;"	f
advance	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn advance(&mut self, cnt: usize) {$/;"	f
advance_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize) {$/;"	f
advance_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize);$/;"	f
advance_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    unsafe fn advance_mut(&mut self, mut cnt: usize) {$/;"	f
advance_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn advance_mut(&mut self, cnt: usize) {$/;"	f
all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn all() -> Ready {$/;"	f
all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn all() -> Self {$/;"	f
and_then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn and_then<F, B>(self, f: F) -> AndThen<Self, B, F>$/;"	f
and_then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn and_then<F, U>(self, f: F) -> AndThen<Self, F, U>$/;"	f
answer_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn answer_count(&mut self, answer_count: u16) -> &mut Self { self.answer_count = answer_count; self }$/;"	f
append	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn append(&self,$/;"	f
append	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn append<R>(&mut self,$/;"	f
append	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn append(&mut self, other: &Self) -> &mut Self {$/;"	f
arbitrary	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^        fn arbitrary<G: Gen>(gen: &mut G) -> Wi128<i128> {$/;"	f
arbitrary	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^        fn arbitrary<G: Gen>(gen: &mut G) -> Wi128<u128> {$/;"	f
arc2ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^fn arc2ptr<T>(ptr: Arc<T>) -> *const T {$/;"	f
arc2ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^fn arc2ptr<T>(ptr: Arc<T>) -> *const T {$/;"	f
as_bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn as_bytes(self) -> &'a Vec<u8> {$/;"	f
as_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn as_raw(&mut self) -> &mut [u8] {$/;"	f
as_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
assert_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^fn assert_future<A, B, F>(t: F) -> F$/;"	f
atyp	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn atyp(self) -> u8 {$/;"	f
atype	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn atype(&self) -> u8 {$/;"	f
authentic_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn authentic_data(&mut self, authentic_data: bool) -> &mut Self {self.authentic_data = authentic_data; self}$/;"	f
authentic_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn authentic_data(&mut self, authentic_data: bool) -> &mut Self {self.header.authentic_data(authentic_data); self}$/;"	f
authenticate	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^fn authenticate(param: (TcpStream, u8)) -> Box<Future<Item = TcpStream, Error = io::Error> + Send> {$/;"	f
authoritative	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn authoritative(&mut self, authoritative: bool) -> &mut Self { self.authoritative = authoritative; self }$/;"	f
authoritative	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn authoritative(&mut self, authoritative: bool) -> &mut Self { self.header.authoritative(authoritative); self }$/;"	f
base_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn base_name(&self) -> Name {$/;"	f
big_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn big_endian() {$/;"	f
blank	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn blank() {$/;"	f
block_on	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn block_on<F>(&mut self, future: F)$/;"	f
block_on_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub fn block_on_all<F>(future: F) -> Result<F::Item, F::Error>$/;"	f
borrow	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn borrow(&self) -> &[u8] {$/;"	f
borrow	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn borrow(&mut self) -> Borrow<P::Unpark> {$/;"	f
boxed	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn boxed(self) -> BoxFuture<Self::Item, Self::Error>$/;"	f
boxed	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn boxed(self) -> BoxStream<Self::Item, Self::Error>$/;"	f
buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn buffer(self, amt: usize) -> Buffer<Self>$/;"	f
buffer_unordered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn buffer_unordered(self, amt: usize) -> BufferUnordered<Self>$/;"	f
buffered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn buffered(self, amt: usize) -> Buffered<Self>$/;"	f
build	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/builder.rs	/^    pub fn build(&mut self) -> io::Result<Runtime> {$/;"	f
by_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn by_ref(&mut self) -> &mut Self where Self: Sized {$/;"	f
by_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn by_ref(&mut self) -> &mut Self where Self: Sized {$/;"	f
by_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn by_ref(&mut self) -> &mut Self$/;"	f
bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn bytes(&self) -> &[u8];$/;"	f
bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    fn bytes(&self) -> &[u8] {$/;"	f
bytes_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8];$/;"	f
bytes_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
bytes_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn bytes_vec<'a>(&'a self, dst: &mut [&'a IoVec]) -> usize {$/;"	f
bytes_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn bytes_vec<'b>(&'b self, dst: &mut [&'b IoVec]) -> usize {$/;"	f
bytes_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    fn bytes_vec<'a>(&'a self, dst: &mut [&'a IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn bytes_vec_mut<'a>(&'a mut self, dst: &mut [&'a mut IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    unsafe fn bytes_vec_mut<'b>(&'b mut self, dst: &mut [&'b mut IoVec]) -> usize {$/;"	f
bytes_vec_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    unsafe fn bytes_vec_mut<'a>(&'a mut self, dst: &mut [&'a mut IoVec]) -> usize {$/;"	f
calc_max	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! calc_max {$/;"	d
calculate_key_tag	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn calculate_key_tag(&self) -> u16 {$/;"	f
cancel_all_spawned	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn cancel_all_spawned(&self) {$/;"	f
capacity	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn capacity(&self) -> usize {$/;"	f
capacity	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
catch_unwind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
catch_unwind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn catch_unwind(self) -> CatchUnwind<Self>$/;"	f
cause	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	f
cause	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    fn cause(&self) -> Option<&error::Error> {$/;"	f
chain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn chain<U>(self, next: U) -> Chain<Self, U::Buf>$/;"	f
chain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn chain<S>(self, other: S) -> Chain<Self, S>$/;"	f
channel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^pub fn channel<T, E>() -> (Sender<T, E>, Receiver<T, E>) {$/;"	f
channel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^fn channel2<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
channel_	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^fn channel_<T>(buffer: Option<usize>) -> (Sender<T>, Receiver<T>) {$/;"	f
checking_disabled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn checking_disabled(&mut self, checking_disabled: bool) -> &mut Self {self.checking_disabled = checking_disabled; self}$/;"	f
checking_disabled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn checking_disabled(&mut self, checking_disabled: bool) -> &mut Self {self.header.checking_disabled(checking_disabled); self}$/;"	f
chunks	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn chunks(self, capacity: usize) -> Chunks<Self>$/;"	f
clear	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn clear(&mut self) {$/;"	f
clear_rrsigs	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn clear_rrsigs(&mut self) {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^        pub fn clone(&self) -> T {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn clone(&self) -> Bytes {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn clone(&self) -> BytesMut {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> Sender<T> {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn clone(&self) -> UnboundedSender<T> {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    fn clone(&self) -> TaskUnpark {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/task_rc.rs	/^    fn clone(&self) -> TaskRc<A> {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^  fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/client_error.rs	/^  fn clone(&self) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn clone(&self, query_count: u16, answer_count: u16, name_server_count: u16, additional_count: u16) -> Self {$/;"	f
clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn clone(&self, index_at: u16) -> BinDecoder {$/;"	f
clone_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn clone_id(&self, id: usize) -> usize {$/;"	f
clone_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn clone_id(&self, id: usize) -> usize {$/;"	f
clone_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    unsafe fn clone_raw(&self) -> NotifyHandle {$/;"	f
clone_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    unsafe fn clone_raw(&self) -> NotifyHandle {$/;"	f
clone_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    unsafe fn clone_raw(&self) -> NotifyHandle;$/;"	f
clone_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    unsafe fn clone_raw(&self) -> NotifyHandle {$/;"	f
clone_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    unsafe fn clone_raw(&self) -> NotifyHandle {$/;"	f
clone_result	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    unsafe fn clone_result(&self) -> Result<SharedItem<F::Item>, SharedError<F::Error>> {$/;"	f
clone_with_context	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  fn clone_with_context(&self) -> Self {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError>;$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/wait.rs	/^    pub fn close(&mut self) -> Result<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn close(&mut self) -> Poll<(), Fut::Error> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    fn close(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    fn close(&mut self) -> Poll<(), S::SinkError> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn close(&mut self) -> Poll<(), SendError<T>> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn close(&mut self) -> Poll<(), SendError<T>> {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    pub fn close(&mut self) {$/;"	f
close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	f
close_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn close_notify<N>(&mut self,$/;"	f
close_rx	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn close_rx(&self) {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn cmp(&self, other: &Bytes) -> cmp::Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn cmp(&self, other: &BytesMut) -> cmp::Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_key.rs	/^  fn cmp(&self, other: &Self) -> Ordering {$/;"	f
cmp_with_case	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn cmp_with_case(&self, other: &Self, ignore_case: bool) -> Ordering {$/;"	f
collect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn collect<B>(self) -> B$/;"	f
collect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn collect(self) -> Collect<Self>$/;"	f
compare_and_swap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn compare_and_swap(&self,$/;"	f
compare_and_swap	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn compare_and_swap<C,N>(&mut self,$/;"	f
compare_or_equal	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^macro_rules! compare_or_equal {$/;"	d
complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn complete(&self) {$/;"	f
complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn complete(self, t: T) {$/;"	f
complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^    pub unsafe fn complete(&self) {$/;"	f
concat	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn concat(self) -> Concat<Self>$/;"	f
concat2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn concat2(self) -> Concat2<Self>$/;"	f
contains	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^  pub fn contains(&self, other_key: &[u8]) -> bool {$/;"	f
copy_to_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn copy_to_slice(&mut self, dst: &mut [u8]) {$/;"	f
create	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn create(&self,$/;"	f
create	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn create<R>(&mut self,$/;"	f
current	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub fn current() -> Task {$/;"	f
current	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn current() -> TaskExecutor {$/;"	f
deadline	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/util/future.rs	/^    fn deadline(self, deadline: Instant) -> Deadline<Self>$/;"	f
dec_num_messages	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn dec_num_messages(&self) {$/;"	f
decode_state	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^fn decode_state(num: usize) -> State {$/;"	f
decode_type_bit_maps	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub fn decode_type_bit_maps(decoder: &mut BinDecoder, bit_map_len: usize) -> DecodeResult<Vec<RecordType>> {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn default() -> BigEndian {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn default() -> LittleEndian {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn default() -> Bytes {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn default() -> BytesMut {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    fn default() -> Self {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^    fn default() -> IdHasher {$/;"	f
default	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^  fn default() -> TrustAnchor {$/;"	f
delete_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn delete_all(&self,$/;"	f
delete_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn delete_all(&mut self,$/;"	f
delete_by_rdata	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn delete_by_rdata(&self,$/;"	f
delete_by_rdata	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn delete_by_rdata<R>(&mut self,$/;"	f
delete_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn delete_rrset(&self,$/;"	f
delete_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn delete_rrset(&mut self,$/;"	f
dequeue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    unsafe fn dequeue(&self) -> Dequeue<T> {$/;"	f
dequeue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    unsafe fn dequeue(&self, tick: Option<usize>) -> Dequeue<U> {$/;"	f
deref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn deref(&self) -> &E {$/;"	f
deref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn deref(&self) -> &T {$/;"	f
deref_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn deref_mut(&mut self) -> &mut [u8] {$/;"	f
deref_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deregister	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn deregister(&self) -> io::Result<()>$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/dnssec_error.rs	/^    fn description(&self) -> &str {$/;"	f
description	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    fn description(&self) -> &str {$/;"	f
deserialize	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn deserialize<D>(deserializer: D) -> Result<$ty, D::Error>$/;"	f
determine_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  fn determine_name(name: &Name, num_labels: u8) -> Option<Name> {$/;"	f
dns_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn dns_class(&mut self, dns_class: DNSClass) -> &mut Self { self.dns_class = dns_class; self }$/;"	f
do_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn do_send(&mut self, msg: Option<T>, do_park: bool) -> Result<(), SendError<T>> {$/;"	f
do_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn do_send(&self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
do_send_nb	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn do_send_nb(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
drain	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn drain(&mut self) -> BytesMut {$/;"	f
drain_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn drain_to(&mut self, at: usize) -> Bytes {$/;"	f
drain_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn drain_to(&mut self, at: usize) -> BytesMut {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^                fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^                    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^            fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^            fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^                    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^        fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop_cancelled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn drop_cancelled(&mut self) {$/;"	f
drop_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn drop_id(&self, id: usize) {$/;"	f
drop_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn drop_id(&self, id: usize) {$/;"	f
drop_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    unsafe fn drop_raw(&self) {$/;"	f
drop_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    unsafe fn drop_raw(&self) {}$/;"	f
drop_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    unsafe fn drop_raw(&self);$/;"	f
drop_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    unsafe fn drop_raw(&self) {$/;"	f
drop_raw	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    unsafe fn drop_raw(&self) {$/;"	f
drop_rx	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn drop_rx(&self) {$/;"	f
drop_tx	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn drop_tx(&self) {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^pub fn emit(encoder: &mut BinEncoder, address: &Ipv4Addr) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^pub fn emit(encoder: &mut BinEncoder, address: &Ipv6Addr) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^pub fn emit(encoder: &mut BinEncoder, rdata: &DNSKEY) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^pub fn emit(encoder: &mut BinEncoder, rdata: &DS) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^pub fn emit(encoder: &mut BinEncoder, mx: &MX) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/name.rs	/^pub fn emit(encoder: &mut BinEncoder, name_data: &Name) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^pub fn emit(encoder: &mut BinEncoder, rdata: &NSEC) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub fn emit(encoder: &mut BinEncoder, rdata: &NSEC3) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^pub fn emit(encoder: &mut BinEncoder, rdata: &NSEC3PARAM) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^pub fn emit(encoder: &mut BinEncoder, nil: &NULL) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub fn emit(encoder: &mut BinEncoder, opt: &OPT) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^pub fn emit(encoder: &mut BinEncoder, sig: &SIG) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^pub fn emit(encoder: &mut BinEncoder, soa: &SOA) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^pub fn emit(encoder: &mut BinEncoder, srv: &SRV) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^pub fn emit(encoder: &mut BinEncoder, txt: &TXT) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  pub fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit(&mut self, b: u8) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult {$/;"	f
emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn emit(&self, encoder: &mut BinEncoder) -> EncodeResult;$/;"	f
emit_as_canonical	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn emit_as_canonical(&self, encoder: &mut BinEncoder, canonical: bool) -> EncodeResult {$/;"	f
emit_character_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn emit_character_data() {$/;"	f
emit_character_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit_character_data(&mut self, char_data: &str) -> EncodeResult {$/;"	f
emit_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn emit_i32() {$/;"	f
emit_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit_i32(&mut self, data: i32) -> EncodeResult {$/;"	f
emit_pre_sig	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^pub fn emit_pre_sig(encoder: &mut BinEncoder, type_covered: RecordType, algorithm: Algorithm,$/;"	f
emit_records	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn emit_records(encoder: &mut BinEncoder, records: &Vec<Record>) -> EncodeResult {$/;"	f
emit_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn emit_u16() {$/;"	f
emit_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit_u16(&mut self, data: u16) -> EncodeResult {$/;"	f
emit_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn emit_u32() {$/;"	f
emit_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit_u32(&mut self, data: u32) -> EncodeResult {$/;"	f
emit_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn emit_vec(&mut self, data: &[u8]) -> EncodeResult {$/;"	f
emit_with_lowercase	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn emit_with_lowercase(&self, encoder: &mut BinEncoder, lowercase: bool) -> EncodeResult {$/;"	f
empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/empty.rs	/^pub fn empty<T, E>() -> Empty<T, E> {$/;"	f
enable_logging	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^  pub fn enable_logging(log_level: LogLevel) {$/;"	f
enable_logging_for_tests	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^fn enable_logging_for_tests() {$/;"	f
enabled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^  fn enabled(&self, metadata: &LogMetadata) -> bool {$/;"	f
encode_bit_maps	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub fn encode_bit_maps(encoder: &mut BinEncoder, type_bit_maps: &[RecordType]) -> EncodeResult {$/;"	f
encode_state	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^fn encode_state(state: &State) -> usize {$/;"	f
enqueue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn enqueue(&self, node: *const Node<T>) {$/;"	f
enqueue	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn enqueue(&self, node: *const Node<U>) {$/;"	f
enter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn enter<F, R>(&mut self, unpark: BorrowedUnpark, f: F) -> R$/;"	f
enter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn enter<F, R>(&mut self, _: &mut Enter, f: F) -> R$/;"	f
enter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn enter<'a>(&'a mut self, enter: &'a mut Enter) -> Entered<'a, P> {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^        fn eq(&self, other: &T) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &&'a T) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &Bytes) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &BytesMut) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &Vec<u8>) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &[u8]) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn eq(&self, other: &Self) -> bool {$/;"	f
erase	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            fn erase(&mut self) {$/;"	f
err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^pub fn err<T, E>(e: E) -> FutureResult<T, E> {$/;"	f
error::Error for Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl error::Error for Error {$/;"	i
error_msg	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn error_msg(id: u16, op_code: OpCode, response_code: ResponseCode) -> Message {$/;"	f
escape	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn escape() {$/;"	f
escape_seq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn escape_seq(&mut self) -> LexerResult<char> {$/;"	f
execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn execute(&self, future: F) -> Result<(), ExecuteError<F>>;$/;"	f
execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn execute(&self, r: Run);$/;"	f
execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn execute(self, exec: Arc<Executor>)$/;"	f
execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn execute(&self, future: F) -> Result<(), ExecuteError<F>> {$/;"	f
execute	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    fn execute(&self, future: T) -> Result<(), future::ExecuteError<T>> {$/;"	f
executor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn executor(&self) -> TaskExecutor {$/;"	f
expecting	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
extend	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn extend<T>(&mut self, iter: T) where T: IntoIterator<Item = &'a u8> {$/;"	f
extend	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn extend<T>(&mut self, iter: T) where T: IntoIterator<Item = u8> {$/;"	f
extend_from_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn extend_from_slice(&mut self, extend: &[u8]) {$/;"	f
extend_sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn extend_sign(val: u64, nbytes: usize) -> i64 {$/;"	f
extend_sign128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn extend_sign128(val: u128, nbytes: usize) -> i128 {$/;"	f
fanout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn fanout<S>(self, other: S) -> Fanout<Self, S>$/;"	f
filter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn filter<F>(self, f: F) -> Filter<Self, F>$/;"	f
filter_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn filter_map<F, B>(self, f: F) -> FilterMap<Self, F>$/;"	f
finish	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^    fn finish(&mut self) -> Vec<S::Item> {$/;"	f
finish	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^    fn finish(&self) -> u64 {$/;"	f
first_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn first_mut(&mut self) -> &mut T {$/;"	f
first_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn first_ref(&self) -> &T {$/;"	f
flatten	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn flatten(self) -> Flatten<Self>$/;"	f
flatten_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn flatten_stream(self) -> FlattenStream<Self>$/;"	f
flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn flush(self) -> Flush<Self>$/;"	f
flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/wait.rs	/^    pub fn flush(&mut self) -> Result<(), S::SinkError> {$/;"	f
flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/debug.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn fmt(&self, f: &mut Formatter) -> FmtResult {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^    fn fmt(&self, fmt: &mut Formatter) -> FmtResult {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/shutdown.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/dnssec_error.rs	/^    fn fmt(&self, _: &mut std::fmt::Formatter) -> Result<(), std::fmt::Error> {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt::Debug for Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl fmt::Debug for Error {$/;"	i
fmt::Display for Error	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^impl fmt::Display for Error {$/;"	i
fold	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn fold<F, T, Fut>(self, init: T, f: F) -> Fold<Self, F, Fut, T>$/;"	f
for_each	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn for_each<F, U>(self, f: F) -> ForEach<Self, F, U>$/;"	f
for_opt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  pub fn for_opt(value: u16) -> Self {$/;"	f
forget	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn forget(self) {$/;"	f
forget	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    pub fn forget(self) {$/;"	f
forward	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn forward<S>(self, sink: S) -> Forward<Self, S>$/;"	f
freeze	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn freeze(self) -> Bytes {$/;"	f
fresh_task_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^fn fresh_task_id() -> usize {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: &'a [u8]) -> Bytes {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: &'a [u8]) -> BytesMut {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: &'a str) -> Bytes {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: &'a str) -> BytesMut {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: Bytes) -> BytesMut {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: BytesMut) -> Bytes {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: String) -> Bytes {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: String) -> BytesMut {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: Vec<u8>) -> Bytes {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from(src: Vec<u8>) -> BytesMut {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^    fn from(r: Result<T, E>) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^    fn from(t: T) -> Async<T> {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn from(handle: NodeToHandle<'a, T>) -> NotifyHandle {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn from(src : &'static T) -> NotifyHandle {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn from(rc: Arc<T>) -> NotifyHandle {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn from(_: tokio_executor::EnterError) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn from(handle: Notify<'a, U>) -> NotifyHandle {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/client_error.rs	/^  fn from(_: ()) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/client_error.rs	/^  fn from(c: Canceled) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/error/client_error.rs	/^  fn from(e: SendError<T>) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  fn from(value: &'a Edns) -> Record {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  fn from(value: &'a Record) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/op_code.rs	/^  fn from(rt: OpCode) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  fn from(rt: ResponseCode) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  fn from(value: u16) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  pub fn from(high: u8, low: u8) -> ResponseCode {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn from(rt: DNSClass) -> &'static str {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn from(rt: DNSClass) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  fn from(a: Algorithm) -> &'static str {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  fn from(a: Algorithm) -> u8 {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  fn from(a: Algorithm) -> DigestType {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  fn from(a: DigestType) -> u8 {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^  fn from(a: Nsec3HashAlgorithm) -> u8 {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  fn from(value: &'a SupportedAlgorithms) -> Vec<u8> {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  fn from(value: &'a [u8]) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  fn from(value: &'a EdnsOption) -> EdnsCode {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  fn from(value: &'a EdnsOption) -> Vec<u8> {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  fn from(value: (EdnsCode, &'a[u8])) -> EdnsOption {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  fn from(value: EdnsCode) -> u16 {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  fn from(value: u16) -> EdnsCode {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn from(rdata: &'a RData) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn from(rt: RecordType) -> &'static str {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn from(rt: RecordType) -> Self {$/;"	f
from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn from(record: Record) -> Self {$/;"	f
from_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/from_buf.rs	/^    fn from_buf<T>(buf: T) -> Self where T: IntoBuf;$/;"	f
from_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/from_buf.rs	/^    fn from_buf<T>(buf: T) -> Self$/;"	f
from_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn from_err<E:From<Self::Error>>(self) -> FromErr<Self, E>$/;"	f
from_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn from_err<E: From<Self::Error>>(self) -> FromErr<Self, E>$/;"	f
from_iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from_iter<T: IntoIterator<Item = u8>>(into_iter: T) -> Self {$/;"	f
from_iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn from_iter<T>(iter: T) -> Self $/;"	f
from_iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn from_iter<T>(iter: T) -> Self $/;"	f
from_pos	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  fn from_pos(pos: u8) -> Option<Algorithm> {$/;"	f
from_rsa	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn from_rsa(rsa: OpenSslRsa) -> DnsSecResult<Self> {$/;"	f
from_slice_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_f32(numbers: &mut [f32]) {$/;"	f
from_slice_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_f32(numbers: &mut [f32]);$/;"	f
from_slice_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_f64(numbers: &mut [f64]) {$/;"	f
from_slice_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_f64(numbers: &mut [f64]);$/;"	f
from_slice_i128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_i128(src: &mut [i128]) {$/;"	f
from_slice_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_i16(src: &mut [i16]) {$/;"	f
from_slice_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_i32(src: &mut [i32]) {$/;"	f
from_slice_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_i64(src: &mut [i64]) {$/;"	f
from_slice_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u128(numbers: &mut [u128]) {$/;"	f
from_slice_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u128(numbers: &mut [u128]);$/;"	f
from_slice_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u16(numbers: &mut [u16]) {$/;"	f
from_slice_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u16(numbers: &mut [u16]);$/;"	f
from_slice_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u32(numbers: &mut [u32]) {$/;"	f
from_slice_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u32(numbers: &mut [u32]);$/;"	f
from_slice_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u64(numbers: &mut [u64]) {$/;"	f
from_slice_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn from_slice_u64(numbers: &mut [u64]);$/;"	f
from_static	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from_static(bytes: &'static [u8]) -> Inner {$/;"	f
from_static	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn from_static(bytes: &'static [u8]) -> Bytes {$/;"	f
from_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  pub fn from_str(str: &str) -> DecodeResult<Self> {$/;"	f
from_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  fn from_str(s: &str) -> DecodeResult<Algorithm> {$/;"	f
from_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  pub fn from_str(str: &str) -> DecodeResult<Self> {$/;"	f
from_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  pub fn from_u16(value: u16) -> DecodeResult<Self> {$/;"	f
from_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  pub fn from_u16(value: u16) -> DecodeResult<Self> {$/;"	f
from_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/op_code.rs	/^  pub fn from_u8(value: u8) -> DecodeResult<Self> {$/;"	f
from_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  pub fn from_u8(value: u8) -> DecodeResult<Self> {$/;"	f
from_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  pub fn from_u8(value: u8) -> DecodeResult<Self> {$/;"	f
from_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^  pub fn from_u8(value: u8) -> DecodeResult<Self> {$/;"	f
from_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn from_vec(mut src: Vec<u8>) -> Inner {$/;"	f
from_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn from_vec(buffer: &[u8]) -> DecodeResult<Message> {$/;"	f
from_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn from_vec(public_key: &[u8], algorithm: Algorithm) -> DnsSecResult<Self> {$/;"	f
fuse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
fuse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	f
future_from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn future_from(T) -> Self::Future;$/;"	f
futures_ordered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^pub fn futures_ordered<I>(futures: I) -> FuturesOrdered<<I::Item as IntoFuture>::Future>$/;"	f
futures_unordered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^pub fn futures_unordered<I>(futures: I) -> FuturesUnordered<<I::Item as IntoFuture>::Future>$/;"	f
generate	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^macro_rules! generate {$/;"	d
get	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^    fn get(&mut self) -> &mut R::Future {$/;"	f
get	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^  pub fn get(&self, idx: usize) -> &[u8] {$/;"	f
get	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  pub fn get(&self, code: &EdnsCode) -> Option<&EdnsOption> {$/;"	f
get_additional_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_additional_count(&self) -> u16 { self.additional_count }$/;"	f
get_additionals	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_additionals(&self) -> &[Record] { self.get_additionals() }$/;"	f
get_additionals	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_additionals(&self) -> &[Record];$/;"	f
get_additionals	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_additionals(&self) -> &[Record] { &self.additionals }$/;"	f
get_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn get_algorithm(&self) -> Algorithm { self.algorithm }$/;"	f
get_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn get_algorithm(&self) -> &Algorithm { &self.algorithm }$/;"	f
get_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^  pub fn get_algorithm(&self) -> &Algorithm { &self.algorithm }$/;"	f
get_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_algorithm(&self) -> Algorithm { self.algorithm }$/;"	f
get_answer_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_answer_count(&self) -> u16 { self.answer_count }$/;"	f
get_answers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_answers(&self) -> &[Record] { &self.answers }$/;"	f
get_anything	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^  pub fn get_anything(&self) -> Option<&Vec<u8>> {$/;"	f
get_buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn get_buffer(&self) -> &[u8] {$/;"	f
get_buffer_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn get_buffer_mut(&mut self) -> &mut Vec<u8> {$/;"	f
get_character_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn get_character_data() -> Vec<(String, Vec<u8>)> {$/;"	f
get_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn get_data() -> Vec<(Name, Vec<u8>)> {$/;"	f
get_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^  fn get_data() -> Vec<(Ipv4Addr, Vec<u8>)> {$/;"	f
get_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^  fn get_data() -> Vec<(Ipv6Addr, Vec<u8>)> {$/;"	f
get_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn get_data() -> Vec<(RData, Vec<u8>)> {$/;"	f
get_digest	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^  pub fn get_digest(&self) -> &[u8] { &self.digest }$/;"	f
get_digest_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^  pub fn get_digest_type(&self) -> DigestType { self.digest_type }$/;"	f
get_dns_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_dns_class(&self) -> DNSClass { self.dns_class }$/;"	f
get_dns_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_dns_class(&self) -> DNSClass {$/;"	f
get_edns	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_edns(&self) -> Option<&Edns> { self.edns.as_ref() }$/;"	f
get_edns_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_edns_mut(&mut self) -> &mut Edns {$/;"	f
get_events	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn get_events(&self) -> EventSet {$/;"	f
get_events_recurse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  fn get_events_recurse(state: TcpState, tcp_type: TcpType) -> EventSet {$/;"	f
get_exchange	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^  pub fn get_exchange(&self) -> &Name { &self.exchange }$/;"	f
get_expire	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_expire(&self) -> i32 { self.expire }$/;"	f
get_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_f32<T: ByteOrder>(&mut self) -> f32 {$/;"	f
get_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_f64<T: ByteOrder>(&mut self) -> f64 {$/;"	f
get_hash_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn get_hash_algorithm(&self) -> Nsec3HashAlgorithm { self.hash_algorithm }$/;"	f
get_hash_algorithm	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^  pub fn get_hash_algorithm(&self) -> Nsec3HashAlgorithm { self.hash_algorithm }$/;"	f
get_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_i16<T: ByteOrder>(&mut self) -> i16 {$/;"	f
get_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_i32<T: ByteOrder>(&mut self) -> i32 {$/;"	f
get_i32_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn get_i32_data() -> Vec<(i32, Vec<u8>)> {$/;"	f
get_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_i64<T: ByteOrder>(&mut self) -> i64 {$/;"	f
get_i8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_i8(&mut self) -> i8 {$/;"	f
get_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_id(&self) -> u16 { self.id }$/;"	f
get_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_id(&self) -> u16 { self.get_id() }$/;"	f
get_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_id(&self) -> u16;$/;"	f
get_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_id(&self) -> u16 { self.header.get_id() }$/;"	f
get_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_int<T: ByteOrder>(&mut self, nbytes: usize) -> i64 {$/;"	f
get_iterations	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn get_iterations(&self) -> u16 { self.iterations }$/;"	f
get_iterations	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^  pub fn get_iterations(&self) -> u16 { self.iterations }$/;"	f
get_key	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn get_key(&self) -> &KeyPair { &self.key }$/;"	f
get_key_tag	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^  pub fn get_key_tag(&self) -> u16 { self.key_tag }$/;"	f
get_key_tag	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_key_tag(&self) -> u16 { self.key_tag }$/;"	f
get_label_pointer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn get_label_pointer(&self, labels: &[Rc<String>]) -> Option<u16> {$/;"	f
get_max_payload	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn get_max_payload(&self) -> u16 { self.max_payload }$/;"	f
get_max_payload	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_max_payload(&self) -> u16 {$/;"	f
get_message_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_message_type(&self) -> MessageType { self.message_type }$/;"	f
get_message_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_message_type(&self) -> MessageType { self.header.get_message_type() }$/;"	f
get_minimum	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_minimum(&self) -> u32 { self.minimum }$/;"	f
get_mname	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_mname(&self) -> &Name { &self.mname }$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^    pub fn get_mut(&mut self) -> &mut B {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^    pub fn get_mut(&mut self) -> &mut B {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    pub fn get_mut(&mut self) -> Option<&mut S> {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	f
get_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn get_mut(&mut self) -> &mut E {$/;"	f
get_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn get_name(&self) -> &Name { &self.name }$/;"	f
get_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_name(&self) -> &domain::Name { &self.name_labels }$/;"	f
get_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_name(&self) -> &Name {$/;"	f
get_name_server_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_name_server_count(&self) -> u16 { self.name_server_count }$/;"	f
get_name_servers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_name_servers(&self) -> &[Record] { &self.name_servers }$/;"	f
get_next_domain_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^  pub fn get_next_domain_name(&self) -> &Name { &self.next_domain_name }$/;"	f
get_next_hashed_owner_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn get_next_hashed_owner_name(&self) -> &[u8] { &self.next_hashed_owner_name }$/;"	f
get_num_labels	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_num_labels(&self) -> u8 { self.num_labels }$/;"	f
get_op_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_op_code(&self) -> OpCode { self.op_code }$/;"	f
get_op_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_op_code(&self) -> OpCode { self.header.get_op_code() }$/;"	f
get_option	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn get_option(&self, code: &EdnsCode) -> Option<&EdnsOption> { self.options.get(code) }$/;"	f
get_options	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn get_options(&self) -> &OPT { &self.options }$/;"	f
get_options	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  pub fn get_options(&self) -> &HashMap<EdnsCode, EdnsOption> {$/;"	f
get_original_ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_original_ttl(&self) -> u32 { self.original_ttl }$/;"	f
get_port	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^  pub fn get_port(&self) -> u16 { self.port }$/;"	f
get_pre_requisites	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_pre_requisites(&self) -> &[Record] { self.get_answers() }$/;"	f
get_pre_requisites	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_pre_requisites(&self) -> &[Record];$/;"	f
get_preference	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^  pub fn get_preference(&self) -> u16 { self.preference }$/;"	f
get_priority	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^  pub fn get_priority(&self) -> u16 { self.priority }$/;"	f
get_ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub fn get_ptr() -> Option<*mut u8> {$/;"	f
get_ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub fn get_ptr() -> Option<*mut u8> {$/;"	f
get_public_key	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn get_public_key(&self) -> &[u8] { &self.public_key }$/;"	f
get_queries	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_queries(&self) -> &[Query] { &self.queries }$/;"	f
get_query_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn get_query_class(&self) -> DNSClass { self.query_class }$/;"	f
get_query_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_query_count(&self) -> u16 { self.query_count }$/;"	f
get_query_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn get_query_type(&self) -> RecordType { self.query_type }$/;"	f
get_rcode_high	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn get_rcode_high(&self) -> u8 { self.rcode_high }$/;"	f
get_rdata	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_rdata(&self) -> &RData { &self.rdata }$/;"	f
get_rdata_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_rdata_mut(&mut self) -> &mut RData { &mut self.rdata }$/;"	f
get_record_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_record_type(&self) -> RecordType {$/;"	f
get_records	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_records(&self, and_rrsigs: bool) -> Vec<&Record> {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^    pub fn get_ref(&self) -> &B {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^    pub fn get_ref(&self) -> &B {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    pub fn get_ref(&self) -> Option<&S> {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^    pub fn get_ref(&self) -> &S {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn get_ref(&self) -> &T {$/;"	f
get_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn get_ref(&self) -> &E {$/;"	f
get_refresh	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_refresh(&self) -> i32 { self.refresh }$/;"	f
get_response_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn get_response_code(&self) -> u8 { self.response_code }$/;"	f
get_response_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_response_code(&self) -> ResponseCode { ResponseCode::from(self.edns.as_ref().map_or(0, |e|e.get_rcode_high()), self.header.get_response_code()) }$/;"	f
get_retry	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_retry(&self) -> i32 { self.retry }$/;"	f
get_rname	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_rname(&self) -> &Name { &self.rname }$/;"	f
get_rr_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_rr_type(&self) -> RecordType { self.rr_type }$/;"	f
get_rrsigs	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_rrsigs(&self) -> &[Record] {$/;"	f
get_salt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn get_salt(&self) -> &[u8] { &self.salt }$/;"	f
get_salt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^  pub fn get_salt(&self) -> &[u8] { &self.salt }$/;"	f
get_serial	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn get_serial(&self) -> u32 { self.serial }$/;"	f
get_serial	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_serial(&self) -> u32 {$/;"	f
get_sig	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_sig(&self) -> &[u8] { &self.sig }$/;"	f
get_sig0	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_sig0(&self) -> &[Record] { &self.sig0 }$/;"	f
get_sig0	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_sig0(&self) -> &[Record] { self.get_sig0() }$/;"	f
get_sig0	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_sig0(&self) -> &[Record];$/;"	f
get_sig_duration	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn get_sig_duration(&self) -> Duration { self.sig_duration }$/;"	f
get_sig_expiration	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_sig_expiration(&self) -> u32 { self.sig_expiration }$/;"	f
get_sig_inception	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_sig_inception(&self) -> u32 { self.sig_inception }$/;"	f
get_signer_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn get_signer_name(&self) -> &Name { &self.signer_name }$/;"	f
get_signer_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_signer_name(&self) -> &Name { &self.signer_name }$/;"	f
get_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn get_stream(&self) -> &TcpStream {$/;"	f
get_target	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^  pub fn get_target(&self) -> &Name { &self.target }$/;"	f
get_ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn get_ttl(&self) -> u32 { self.ttl }$/;"	f
get_ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn get_ttl(&self) -> u32 {$/;"	f
get_txt_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^  pub fn get_txt_data(&self) -> &[String] { &self.txt_data }$/;"	f
get_type_bit_maps	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^  pub fn get_type_bit_maps(&self) -> &[RecordType] { &self.type_bit_maps }$/;"	f
get_type_bit_maps	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn get_type_bit_maps(&self) -> &[RecordType] { &self.type_bit_maps }$/;"	f
get_type_covered	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn get_type_covered(&self) -> RecordType { self.type_covered }$/;"	f
get_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_u16<T: ByteOrder>(&mut self) -> u16 {$/;"	f
get_u16_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn get_u16_data() -> Vec<(u16, Vec<u8>)> {$/;"	f
get_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_u32<T: ByteOrder>(&mut self) -> u32 {$/;"	f
get_u32_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn get_u32_data() -> Vec<(u32, Vec<u8>)> {$/;"	f
get_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_u64<T: ByteOrder>(&mut self) -> u64 {$/;"	f
get_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_u8(&mut self) -> u8 {$/;"	f
get_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn get_uint<T: ByteOrder>(&mut self, nbytes: usize) -> u64 {$/;"	f
get_updates	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_updates(&self) -> &[Record] { self.get_name_servers() }$/;"	f
get_updates	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_updates(&self) -> &[Record];$/;"	f
get_version	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn get_version(&self) -> u8 { self.version }$/;"	f
get_version	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn get_version(&self) -> u8 { self.edns.as_ref().map_or(0, |e|e.get_version()) }$/;"	f
get_weight	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^  pub fn get_weight(&self) -> u16 { self.weight }$/;"	f
get_zones	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_zones(&self) -> &[Query] { self.get_queries() }$/;"	f
get_zones	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn get_zones(&self) -> &[Query];$/;"	f
handle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn handle(&self) -> &Handle {$/;"	f
handle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn handle(&self) -> &Handle {$/;"	f
handle_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn handle_message(&mut self, events: EventSet) -> io::Result<TcpState> {$/;"	f
handle_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^  pub fn handle_message(&self, socket: &UdpSocket, events: EventSet) -> io::Result<UdpState> {$/;"	f
handle_request	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/request_handler.rs	/^  fn handle_request(&self, request: &Message) -> Message;$/;"	f
handle_socks5_client	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^fn handle_socks5_client(sock: TcpStream) -> io::Result<()> {$/;"	f
handshake	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^fn handshake(conn: TcpStream) -> Box<Future<Item = u8, Error = io::Error> + Send> {$/;"	f
has	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn has(&self, algorithm: Algorithm) -> bool {$/;"	f
has_remaining	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn has_remaining(&self) -> bool {$/;"	f
has_remaining_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn has_remaining_mut(&self) -> bool {$/;"	f
hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn hash<H>(&self, state: &mut H) where H: hash::Hasher {$/;"	f
hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  pub fn hash(&self, _: &[u8]) -> DnsSecResult<Vec<u8>> {$/;"	f
hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  pub fn hash(&self, data: &[u8]) -> DnsSecResult<Vec<u8>> {$/;"	f
hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^  pub fn hash(&self, salt: &[u8], name: &Name, iterations: u16) -> DnsSecResult<Vec<u8>> {$/;"	f
hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn hash<H>(&self, state: &mut H) where H: Hasher {$/;"	f
hash_len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  pub fn hash_len(&self) -> usize {$/;"	f
hash_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  fn hash_message(&self, message: &Message) -> DnsSecResult<Vec<u8>> {$/;"	f
hash_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn hash_rrset(&self, name: &Name, dns_class: DNSClass, num_labels: u8,$/;"	f
hash_rrset_with_rrsig	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn hash_rrset_with_rrsig(&self, rrsig: &Record, records: &[Record]) -> DnsSecResult<Vec<u8>> {$/;"	f
hash_rrset_with_sig	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn hash_rrset_with_sig(&self, name: &Name, dns_class: DNSClass, sig: &SIG, records: &[Record]) -> DnsSecResult<Vec<u8>> {$/;"	f
hash_with_base32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^fn hash_with_base32(name: &str) -> String {$/;"	f
hide_lt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^unsafe fn hide_lt<T>(p: *mut ArcNode<T>) -> *mut UnsafeNotify {$/;"	f
hide_lt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^unsafe fn hide_lt<'a>(p: *mut (SpawnLocal + 'a)) -> *mut (SpawnLocal + 'static) {$/;"	f
hide_lt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^unsafe fn hide_lt<U: Unpark>(p: *mut ArcNode<U>) -> *mut UnsafeNotify {$/;"	f
high	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  pub fn high(&self) {$/;"	f
hup	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn hup() -> Ready {$/;"	f
id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn id(&mut self, id: u16) -> &mut Self { self.id = id; self }$/;"	f
id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn id(&mut self, id: u16) -> &mut Self { self.header.id(id); self }$/;"	f
if_std	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lib.rs	/^macro_rules! if_std {$/;"	d
imp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^        fn imp(arc: &AtomicPtr<Shared>) -> usize {$/;"	f
inc_num_messages	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn inc_num_messages(&self, close: bool) -> Option<bool> {$/;"	f
increment_serial	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn increment_serial(&mut self) {$/;"	f
index	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^    fn index<'a>(&'a self, _index: usize) -> &'a String {$/;"	f
index	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn index(&self) -> usize {$/;"	f
init	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub unsafe fn init(get: fn() -> *mut u8, set: fn(*mut u8)) -> bool {$/;"	f
init	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^  pub fn init(self) -> Result<(), SetLoggerError> {$/;"	f
initial_state	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn initial_state(tcp_type: TcpType) -> Self {$/;"	f
inline_len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn inline_len(&self) -> usize {$/;"	f
inline_ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn inline_ptr(&self) -> *mut u8 {$/;"	f
inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    fn inner(&self) -> &Inner {$/;"	f
inner_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    fn inner_mut(&mut self) -> &mut Inner {$/;"	f
inner_query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn inner_query(&self, name: &domain::Name, query_class: DNSClass, query_type: RecordType, secure: bool) -> ClientResult<Message> {$/;"	f
insert	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn insert(&self, id: usize);$/;"	f
insert	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  pub fn insert(&mut self, option: EdnsOption) {$/;"	f
insert	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn insert(&mut self, record: Record, serial: u32) -> bool {$/;"	f
insert_additionals	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn insert_additionals(&mut self, records: Vec<Record>) {$/;"	f
insert_answers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn insert_answers(&mut self, records: Vec<Record>) {$/;"	f
insert_name_servers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn insert_name_servers(&mut self, records: Vec<Record>) {$/;"	f
insert_rrsig	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn insert_rrsig(&mut self, rrsig: Record) {$/;"	f
insert_trust_anchor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^  pub fn insert_trust_anchor(&mut self, public_key: Vec<u8>) {$/;"	f
inspect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn inspect<F>(self, f: F) -> Inspect<Self, F>$/;"	f
inspect	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn inspect<F>(self, f: F) -> Inspect<Self, F>$/;"	f
inspect_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn inspect_err<F>(self, f: F) -> InspectErr<Self, F>$/;"	f
into_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self {$/;"	f
into_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self::Buf {$/;"	f
into_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/into_buf.rs	/^    fn into_buf(self) -> Self::Buf;$/;"	f
into_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn into_buf(self) -> Self::Buf {$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            fn into_future(self) -> Self::Future {$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn into_future(self) -> F {$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn into_future(self) -> FutureResult<T, E> {$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn into_future(self) -> Self::Future;$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    pub fn into_future(self) -> F {$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn into_future(self) -> StreamFuture<Self>$/;"	f
into_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^    fn into_future(self) -> Self::Future {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn into_inner(self) -> (T, U) {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^    pub fn into_inner(self) -> B {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^    pub fn into_inner(self) -> B {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    pub fn into_inner(self) -> (A, B) {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    pub fn into_inner(self) -> Option<S> {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^    pub fn into_inner(self) -> S {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    unsafe fn into_inner(mut self) -> T {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn into_inner(self) -> T where T: Sized {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    pub fn into_inner(self) -> T {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn into_inner(self) -> Option<T> {$/;"	f
into_inner	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn into_inner(self) -> E {$/;"	f
into_iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn into_iter(self) -> Self::IntoIter {$/;"	f
into_record_set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn into_record_set(self) -> RecordSet {$/;"	f
into_record_set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn into_record_set(self) -> RecordSet;$/;"	f
into_record_set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn into_record_set(self) -> Self { self }$/;"	f
into_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn into_stream(self) -> IntoStream<Self>$/;"	f
is_aio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn is_aio(_ready: &Ready) -> bool {$/;"	f
is_aio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn is_aio(ready: &Ready) -> bool {$/;"	f
is_authentic_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_authentic_data(&self) -> bool {self.authentic_data}$/;"	f
is_authentic_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_authentic_data(&self) -> bool { self.header.is_authentic_data() }$/;"	f
is_authoritative	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_authoritative(&self) -> bool { self.authoritative }$/;"	f
is_authoritative	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_authoritative(&self) -> bool { self.header.is_authoritative() }$/;"	f
is_canceled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn is_canceled(&self) -> bool {$/;"	f
is_canceled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn is_canceled(&self) -> bool {$/;"	f
is_canceled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    pub fn is_canceled(&self) -> bool {$/;"	f
is_canonical_names	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn is_canonical_names(&self) -> bool {$/;"	f
is_checking_disabled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_checking_disabled(&self) -> bool {self.checking_disabled}$/;"	f
is_checking_disabled	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_checking_disabled(&self) -> bool { self.header.is_checking_disabled() }$/;"	f
is_current	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn is_current(&self) -> bool {$/;"	f
is_disconnected	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn is_disconnected(&self) -> bool {$/;"	f
is_dnssec_ok	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn is_dnssec_ok(&self) -> bool { self.dnssec_ok }$/;"	f
is_done	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_done	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    pub fn is_done(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn is_empty(&self) -> bool {$/;"	f
is_full	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_get_ptr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub fn is_get_ptr(f: usize) -> bool {$/;"	f
is_idle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn is_idle(&self) -> bool {$/;"	f
is_inline	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_inline(&self) -> bool {$/;"	f
is_key_covered_by	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn is_key_covered_by(name: &domain::Name, key: &DNSKEY, ds: &DS) -> ClientResult<bool> {$/;"	f
is_lio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn is_lio(_ready: &Ready) -> bool {$/;"	f
is_lio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn is_lio(ready: &Ready) -> bool {$/;"	f
is_mut_safe	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_mut_safe(&mut self) -> bool {$/;"	f
is_not_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^    pub fn is_not_ready(&self) -> bool {$/;"	f
is_opt_out	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn is_opt_out(&self) -> bool { self.opt_out }$/;"	f
is_opt_out	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^  pub fn is_opt_out(&self) -> bool { self.opt_out }$/;"	f
is_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^    pub fn is_ready(&self) -> bool {$/;"	f
is_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_recursion_available	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_recursion_available(&self) -> bool {self.recursion_available }$/;"	f
is_recursion_available	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_recursion_available(&self) -> bool { self.header.is_recursion_available() }$/;"	f
is_recursion_desired	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_recursion_desired(&self) -> bool { self.recursion_desired }$/;"	f
is_recursion_desired	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_recursion_desired(&self) -> bool { self.header.is_recursion_desired() }$/;"	f
is_revoke	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn is_revoke(&self) -> bool { self.revoke }$/;"	f
is_root	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn is_root(&self) -> bool {$/;"	f
is_secure_entry_point	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn is_secure_entry_point(&self) -> bool { self.secure_entry_point }$/;"	f
is_shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_shared(&mut self) -> bool {$/;"	f
is_static	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_static(&mut self) -> bool {$/;"	f
is_timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn is_timeout(&self) -> bool {$/;"	f
is_truncated	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn is_truncated(&self) -> bool { self.truncation }$/;"	f
is_truncated	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn is_truncated(&self) -> bool { self.header.is_truncated() }$/;"	f
is_unique	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn is_unique(&self) -> bool {$/;"	f
is_wouldblock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^fn is_wouldblock<T>(r: &io::Result<T>) -> bool {$/;"	f
is_zone_key	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn is_zone_key(&self) -> bool { self.zone_key }$/;"	f
iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn iter(self) -> Iter<Self> where Self: Sized {$/;"	f
iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter.rs	/^pub fn iter<J, T, E>(i: J) -> Iter<J::IntoIter>$/;"	f
iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn iter(&self) -> SupportedAlgorithmsIter {$/;"	f
iter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn iter<'s>(&'s self) -> Iter<'s, Record> {$/;"	f
iter_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    pub fn iter_mut(&mut self) -> IterMut<T> {$/;"	f
iter_ok	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_ok.rs	/^pub fn iter_ok<I, E>(i: I) -> IterOk<I::IntoIter, E>$/;"	f
iter_result	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_result.rs	/^pub fn iter_result<J, T, E>(i: J) -> IterResult<J::IntoIter>$/;"	f
join	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn join<B>(self, other: B) -> Join<Self, B::Future>$/;"	f
join3	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn join3<B, C>(self, b: B, c: C) -> Join3<Self, B::Future, C::Future>$/;"	f
join4	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn join4<B, C, D>(self, b: B, c: C, d: D)$/;"	f
join5	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn join5<B, C, D, E>(self, b: B, c: C, d: D, e: E)$/;"	f
join_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^pub fn join_all<I>(i: I) -> JoinAll<I>$/;"	f
keep_flushing	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn keep_flushing(&mut self) -> Result<(), S::SinkError> {$/;"	f
kind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn kind(&self) -> usize {$/;"	f
kind	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    pub fn kind(&self) -> ExecuteErrorKind {$/;"	f
label	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn label(mut self, label: &'static str) -> Self {$/;"	f
last_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn last_mut(&mut self) -> &mut U {$/;"	f
last_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn last_ref(&self) -> &U {$/;"	f
lazy	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^pub fn lazy<F, R>(f: F) -> Lazy<F, R>$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn len() -> usize { 12 \/* this is always 12 bytes *\/ }$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn len(&self) -> u16 {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  pub fn len(&self) -> u16 {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn len(&self) -> usize {$/;"	f
len	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn len(&self) -> usize {$/;"	f
lex	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn lex() {$/;"	f
limit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    pub fn limit(&self) -> usize {$/;"	f
link	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn link(&mut self, node: Arc<Node<T>>) -> *const Node<T> {$/;"	f
list	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn list() {$/;"	f
little_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn little_endian() {$/;"	f
local_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub fn local_map() -> LocalMap { LocalMap }$/;"	f
local_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^pub fn local_map() -> LocalMap {$/;"	f
lock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    pub fn lock(self) -> BiLockAcquire<T> {$/;"	f
log	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^  fn log(&self, record: &LogRecord) {$/;"	f
loop_fn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^pub fn loop_fn<S, T, A, F>(initial_state: S, mut func: F) -> LoopFn<A, F>$/;"	f
low	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  pub fn low(&self) -> u8 {$/;"	f
main	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^fn main() {$/;"	f
map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn map<F, U>(self, f: F) -> Map<Self, F>$/;"	f
map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^    pub fn map<F, U>(self, f: F) -> Async<U>$/;"	f
map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^    pub fn map<F, U>(self, f: F) -> AsyncSink<U>$/;"	f
map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn map<U, F>(self, f: F) -> Map<Self, F>$/;"	f
map_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn map_err<F, E>(self, f: F) -> MapErr<Self, F>$/;"	f
map_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn map_err<U, F>(self, f: F) -> MapErr<Self, F>$/;"	f
max_senders	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn max_senders(&self) -> usize {$/;"	f
merge	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn merge<S>(self, other: S) -> Merge<Self, S>$/;"	f
message_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn message_type(&mut self, message_type: MessageType) -> &mut Self { self.message_type = message_type; self }$/;"	f
message_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn message_type(&mut self, message_type: MessageType) -> &mut Self { self.header.message_type(message_type); self }$/;"	f
mode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn mode(&self) -> EncodeMode {$/;"	f
name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn name(&mut self, name: Name) -> &mut Self { self.name = name; self }$/;"	f
name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn name(&mut self, name: domain::Name) -> &mut Self { self.name_labels = name; self }$/;"	f
name_server_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn name_server_count(&mut self, name_server_count: u16) -> &mut Self { self.name_server_count = name_server_count; self }$/;"	f
native_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn native_endian() {$/;"	f
ne	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn ne(&self, other: &Self) -> bool {$/;"	f
need_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn need_read(&mut self) -> io::Result<()> {$/;"	f
need_write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn need_write(&mut self) -> io::Result<()> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    pub fn new(a: T, b: U) -> Chain<T, U> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^pub fn new<T>(inner: T) -> Iter<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^pub fn new<B>(buf: B) -> Reader<B> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^pub fn new<T>(inner: T, limit: usize) -> Take<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^pub fn new<B>(buf: B) -> Writer<B> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn new() -> Bytes {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn new() -> BytesMut {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/and_then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> AndThen<A, B, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^pub fn new<F>(future: F) -> CatchUnwind<F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/chain.rs	/^    pub fn new(a: A, c: C) -> Chain<A, B, C> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^pub fn new<A>(future: A) -> Flatten<A>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^pub fn new<F>(f: F) -> FlattenStream<F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/from_err.rs	/^pub fn new<A, E>(future: A) -> FromErr<A, E>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^pub fn new<A: Future>(f: A) -> Fuse<A> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/inspect.rs	/^pub fn new<A, F>(future: A, f: F) -> Inspect<A, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/into_stream.rs	/^pub fn new<F: Future>(future: F) -> IntoStream<F> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map.rs	/^pub fn new<A, F>(future: A, f: F) -> Map<A, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map_err.rs	/^pub fn new<A, F>(future: A, f: F) -> MapErr<A, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    pub fn new(kind: ExecuteErrorKind, future: F) -> ExecuteError<F> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/or_else.rs	/^pub fn new<A, B, F>(future: A, f: F) -> OrElse<A, B, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^pub fn new<A, B>(a: A, b: B) -> Select<A, B>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select2.rs	/^pub fn new<A, B>(a: A, b: B) -> Select2<A, B> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    pub fn new(future: F) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^pub fn new<F: Future>(future: F) -> Shared<F> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/then.rs	/^pub fn new<A, B, F>(future: A, f: F) -> Then<A, B, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    pub fn new(t: T) -> Lock<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/resultstream.rs	/^pub fn new<S, E>(s: S) -> Results<S, E> where S: Stream {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^pub fn new<S: Sink>(sink: S, amt: usize) -> Buffer<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn new(sink: S) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^pub fn new<A: Sink, B: Sink>(left: A, right: B) -> Fanout<A, B> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^pub fn new<S: Sink>(sink: S) -> Flush<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^pub fn new<S, E>(sink: S) -> SinkFromErr<S, E>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^pub fn new<S, F>(s: S, f: F) -> SinkMapErr<S, F> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^pub fn new<S: Sink>(sink: S, item: S::SinkItem) -> Send<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^pub fn new<T, U>(sink: T, stream: U) -> SendAll<T, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/wait.rs	/^pub fn new<S: Sink>(s: S) -> Wait<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^pub fn new<S, U, F, Fut>(sink: S, f: F) -> With<S, U, F, Fut>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^pub fn new<S, U, F, St>(sink: S, f: F) -> WithFlatMap<S, U, F, St>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> AndThen<S, F, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^pub fn new<S>(s: S, amt: usize) -> BufferUnordered<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^pub fn new<S>(s: S, amt: usize) -> Buffered<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^pub fn new<S>(stream: S) -> CatchUnwind<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^pub fn new<S1, S2>(s1: S1, s2: S2) -> Chain<S1, S2>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^pub fn new<S>(s: S, capacity: usize) -> Chunks<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^pub fn new<S>(s: S) -> Collect<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^pub fn new<S>(s: S) -> Concat<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^pub fn new<S, F>(s: S, f: F) -> Filter<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^pub fn new<S, F, B>(s: S, f: F) -> FilterMap<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^pub fn new<S>(s: S) -> Flatten<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^pub fn new<S, F, Fut, T>(s: S, f: F, t: T) -> Fold<S, F, Fut, T>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/for_each.rs	/^pub fn new<S, F, U>(s: S, f: F) -> ForEach<S, F, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^pub fn new<T, U>(stream: T, sink: U) -> Forward<T, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^pub fn new<S, E>(stream: S) -> FromErr<S, E>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^pub fn new<S: Stream>(s: S) -> Fuse<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^pub fn new<S: Stream>(s: S) -> StreamFuture<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    pub fn new() -> FuturesOrdered<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    pub fn new() -> FuturesUnordered<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^pub fn new<S, F>(stream: S, f: F) -> Inspect<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^pub fn new<S, F>(stream: S, f: F) -> InspectErr<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Map<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^pub fn new<S, F, U>(s: S, f: F) -> MapErr<S, F>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Merge<S1, S2>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^pub fn new<S, F, U>(s: S, f: F) -> OrElse<S, F, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^pub fn new<S: Stream>(stream: S) -> Peekable<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/select.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Select<S1, S2>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^pub fn new<S>(s: S, amt: u64) -> Skip<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> SkipWhile<S, P, R>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^pub fn new<S>(s: S, amt: u64) -> Take<S>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^pub fn new<S, P, R>(s: S, p: P) -> TakeWhile<S, P, R>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^pub fn new<S, F, U>(s: S, f: F) -> Then<S, F, U>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^pub fn new<S: Stream>(s: S) -> Wait<S> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/zip.rs	/^pub fn new<S1, S2>(stream1: S1, stream2: S2) -> Zip<S1, S2>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    pub fn new(t: T) -> (BiLock<T>, BiLock<T>) {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^    pub fn new() -> Queue<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^    unsafe fn new(v: Option<T>) -> *mut Node<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn new() -> Inner<T> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    pub fn new() -> AtomicTask {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn new() -> BorrowedEvents<'a> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn new(f: &'a Fn() -> NotifyHandle, id: usize) -> BorrowedUnpark<'a> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub unsafe fn new(inner: *mut UnsafeNotify) -> NotifyHandle {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn new() -> BorrowedEvents<'a> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn new(f: &'a Fn() -> NotifyHandle, id: usize) -> BorrowedUnpark<'a> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn new(set: Arc<EventSet>, id: usize) -> UnparkEvent {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/task_rc.rs	/^    pub fn new(a: A) -> TaskRc<A> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^    pub fn new() -> UnparkMutex<D> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn new(timeout: bool) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn new(future: Box<Future<Item = (), Error = ()> + 'static>) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn new(unpark: U) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn new(io: E, handle: &Handle) -> io::Result<PollEvented<E>>$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/builder.rs	/^    pub fn new() -> Builder {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn new() -> io::Result<Self> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn new(client_connection: C) -> Client<C> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  pub fn new(stream: Box<Future<Item=S, Error=io::Error>>,$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^  pub fn new(client: H) -> MemoizeClientHandle<H> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  pub fn new(client: H, attempts: usize) -> RetryClientHandle<H> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  pub fn new(client: H) -> SecureClientHandle<H> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/logger.rs	/^  pub fn new(level: LogLevel) -> TrustDnsLogger {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn new(algorithm: Algorithm, key: KeyPair, signer_name: Name, sig_duration: Duration) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn new(algorithms: &'a SupportedAlgorithms) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^  pub fn new() -> TrustAnchor {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^  pub fn new(zone_key: bool, secure_entry_point: bool, revoke: bool, algorithm: Algorithm,$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^  pub fn new(key_tag: u16, algorithm: Algorithm, digest_type: DigestType, digest: Vec<u8>) -> DS {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^  pub fn new(preference: u16, exchange: Name) -> MX {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^  pub fn new(next_domain_name: Name, type_bit_maps: Vec<RecordType>) -> NSEC {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^  pub fn new(hash_algorithm: Nsec3HashAlgorithm, opt_out: bool, iterations: u16, salt: Vec<u8>,$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^  pub fn new(hash_algorithm: Nsec3HashAlgorithm, opt_out: bool, iterations: u16, salt: Vec<u8>) -> NSEC3PARAM {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^  pub fn new() -> NULL {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^  pub fn new(options: HashMap<EdnsCode, EdnsOption>) -> OPT {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^  pub fn new(type_covered: RecordType, algorithm: Algorithm, num_labels: u8, original_ttl: u32,$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^  pub fn new(mname: Name, rname: Name, serial: u32,$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^  pub fn new(priority: u16, weight: u16, port: u16, target: Name) -> SRV {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^  pub fn new(txt_data: Vec<String>) -> TXT {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn new() -> Record {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_key.rs	/^  pub fn new(name: &Name, record_type: RecordType) -> RrKey {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn new(name: &Name, record_type: RecordType, serial: u32) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn new(buffer: &'a [u8]) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn new(buf: &'a mut Vec<u8>) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master.rs	/^  pub fn new() -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  pub fn new(txt: &str) -> Lexer {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  fn new(tcp_type: TcpType, state: TcpState, buffer: Vec<u8>, stream: TcpStream) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  pub fn new(name_server: SocketAddr) -> ClientResult<Self> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^  pub fn new(name_server: SocketAddr, loop_handle: Handle) -> (Box<Future<Item=TcpClientStream, Error=io::Error>>, Box<ClientStreamHandle>) {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  pub fn new(name_server: SocketAddr, loop_handle: Handle) -> (Box<Future<Item=TcpStream, Error=io::Error>>, BufStreamHandle) {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  pub fn new(name_server: SocketAddr) -> ClientResult<Self> {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  pub fn new(socket: UdpSocket) -> Self {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^  pub fn new(name_server: SocketAddr, loop_handle: Handle) -> (Box<Future<Item=UdpClientStream, Error=io::Error>>, Box<ClientStreamHandle>) {$/;"	f
new	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  pub fn new(name_server: SocketAddr, loop_handle: Handle) -> (Box<Future<Item=UdpStream, Error=io::Error>>, BufStreamHandle) {$/;"	f
new	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    fn new(rep: RepCode, msg: &str) -> Error {$/;"	f
new	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn new(method: u8) -> Self {$/;"	f
new	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn new(methods: Vec<u8>) -> HandshakeReq {$/;"	f
new	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn new(rep: RepCode, addr: Option<Address>) -> Self {$/;"	f
new	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^    fn new(writer: W, bytes: B) -> WriteBytes<W, B> {$/;"	f
new2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^pub fn new2<S>(s: S) -> Concat2<S>$/;"	f
new_client	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^  pub fn new_client(server_addr: SocketAddr, request: Message) -> Self {$/;"	f
new_client_handler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn new_client_handler(stream: TcpStream) -> Self {$/;"	f
new_record	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn new_record(&mut self, rdata: RData) -> &Record {$/;"	f
new_safe	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^fn new_safe<S>(s: S) -> ConcatSafe<S>$/;"	f
new_server	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^  pub fn new_server<H>(socket: &UdpSocket, catalog: Arc<H>) -> Option<Self> where H: RequestHandler {$/;"	f
new_server_handler	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn new_server_handler(stream: TcpStream) -> Self {$/;"	f
new_verifier	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn new_verifier(algorithm: Algorithm, key: KeyPair, signer_name: Name) -> Self {$/;"	f
new_with_park	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn new_with_park(park: P) -> Self {$/;"	f
next	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    fn next(&mut self) -> Option<u8> {$/;"	f
next	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn next(&mut self) -> Option<&'a mut F> {$/;"	f
next	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/wait.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  fn next(&mut self) -> Option<Self::Item> {$/;"	f
next_bound_local_address	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  fn next_bound_local_address() -> ClientResult<UdpSocket> {$/;"	f
next_bound_local_address	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  fn next_bound_local_address(name_server: &SocketAddr) -> NextRandomUdpSocket {$/;"	f
next_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn next_message(&mut self) -> Async<Option<T>> {$/;"	f
next_random_query_id	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn next_random_query_id(&self) -> Async<u16> {$/;"	f
next_state	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn next_state(&self, tcp_type: TcpType) -> Self {$/;"	f
next_token	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn next_token(lexer: &mut Lexer) -> Option<Token> {$/;"	f
next_token	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  pub fn next_token(&mut self) -> LexerResult<Option<Token>> {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn notify(&self, _id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn notify(&self, _id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn notify(me: &Arc<Node<T>>) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn notify(&mut self) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    pub fn notify(&self) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn notify(&self) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn notify(&self) {}$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn notify(&self, id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    fn notify(&self, id: usize);$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn notify(&self) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn notify(&self, id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn notify(&self, _id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn notify(&self, _unpark_id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn notify(&self, id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn notify(&self) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^    pub fn notify(&self) -> Result<D, ()> {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn notify(&self, _: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn notify(&self, _id: usize) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn notify(me: &Arc<Node<U>>) {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn notify(&self) -> NotifyHandle {$/;"	f
notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn notify<R>(&mut self, name: domain::Name, query_class: DNSClass, query_type: RecordType, rrset: Option<R>)$/;"	f
num_labels	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn num_labels() {$/;"	f
num_labels	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn num_labels(&self) -> u8 {$/;"	f
offset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn offset(&self) -> u32 {$/;"	f
ok	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^pub fn ok<T, E>(t: T) -> FutureResult<T, E> {$/;"	f
once	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/once.rs	/^pub fn once<T, E>(item: Result<T, E>) -> Once<T, E> {$/;"	f
op_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn op_code(&mut self, op_code: OpCode) -> &mut Self { self.op_code = op_code; self }$/;"	f
op_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn op_code(&mut self, op_code: OpCode) -> &mut Self { self.header.op_code(op_code); self }$/;"	f
or_else	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn or_else<F, B>(self, f: F) -> OrElse<Self, B, F>$/;"	f
or_else	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn or_else<F, U>(self, f: F) -> OrElse<Self, F, U>$/;"	f
original_capacity_from_repr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn original_capacity_from_repr(repr: usize) -> usize {$/;"	f
original_capacity_to_repr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn original_capacity_to_repr(cap: usize) -> usize {$/;"	f
other	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^fn other(desc: &str) -> io::Error {$/;"	f
pack_size	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn pack_size(n: u64) -> usize {$/;"	f
pack_size128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn pack_size128(n: u128) -> usize {$/;"	f
park	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn park(&mut self, can_park: bool) {$/;"	f
park	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub fn park() -> Task {$/;"	f
park	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn park(&self) {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn parse() {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn parse(local: &str, origin: Option<&Self>) -> ParseResult<Self> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^pub fn parse(tokens: &Vec<Token>) -> ParseResult<Ipv4Addr> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^pub fn parse(tokens: &Vec<Token>) -> ParseResult<Ipv6Addr> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^pub fn parse(tokens: &Vec<Token>, origin: Option<&Name>) -> ParseResult<MX> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/name.rs	/^pub fn parse(tokens: &Vec<Token>, origin: Option<&Name>) -> ParseResult<Name> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^pub fn parse(tokens: &Vec<Token>) -> ParseResult<NULL> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^pub fn parse(tokens: &Vec<Token>, origin: Option<&Name>) -> ParseResult<SOA> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^pub fn parse(tokens: &Vec<Token>, origin: Option<&Name>) -> ParseResult<SRV> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^pub fn parse(tokens: &Vec<Token>) -> ParseResult<TXT> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  pub fn parse(record_type: RecordType, tokens: &Vec<Token>, origin: Option<&Name>) -> ParseResult<Self> {$/;"	f
parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master.rs	/^  pub fn parse(&mut self, lexer: Lexer, origin: Option<Name>) -> ParseResult<(Name, BTreeMap<RrKey, RecordSet>)> {$/;"	f
parse_time	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master.rs	/^  pub fn parse_time(ttl_str: &str) -> ParseResult<u32> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &&'a T) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &Bytes) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &BytesMut) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &String) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &Vec<u8>) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &[u8]) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn partial_cmp(&self, other: &str) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn partial_cmp(&self, other: &DNSClass) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn partial_cmp(&self, other: &Name) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn partial_cmp(&self, other: &RData) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn partial_cmp(&self, other: &RecordType) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn partial_cmp(&self, other: &Record) -> Option<Ordering> {$/;"	f
partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_key.rs	/^  fn partial_cmp(&self, other: &RrKey) -> Option<Ordering> {$/;"	f
peek	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    pub fn peek(&self) -> Option<Result<SharedItem<F::Item>, SharedError<F::Error>>> {$/;"	f
peek	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    pub fn peek(&mut self) -> Poll<Option<&S::Item>, S::Error> {$/;"	f
peek	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn peek(&self) -> Option<u8> {$/;"	f
peek	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn peek(&mut self) -> Option<char> {$/;"	f
peekable	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn peekable(self) -> Peekable<Self>$/;"	f
peer_addr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/and_then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<F::Item, F::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/chain.rs	/^    pub fn poll<F>(&mut self, f: F) -> Poll<B::Item, B::Error>$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/either.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/empty.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/flatten_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/from_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/fuse.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/inspect.rs	/^    fn poll(&mut self) -> Poll<A::Item, A::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/into_stream.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^            fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^    fn poll(&mut self) -> Result<bool, A::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/lazy.rs	/^    fn poll(&mut self) -> Poll<R::Item, R::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/loop_fn.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map.rs	/^    fn poll(&mut self) -> Poll<U, A::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/map_err.rs	/^    fn poll(&mut self) -> Poll<A::Item, U> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^        fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error>;$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/option.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/or_else.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/poll_fn.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select2.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_ok.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/then.rs	/^    fn poll(&mut self) -> Poll<B::Item, B::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/resultstream.rs	/^    fn poll(&mut self) -> Poll<Option<Result<S::Item, S::Error>>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/flush.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    fn poll(&mut self) -> Poll<S, S::SinkError> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::SinkError> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/catch_unwind.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chain.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/collect.rs	/^    fn poll(&mut self) -> Poll<Vec<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/concat.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/empty.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    fn poll(&mut self) -> Poll<Option<B>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fold.rs	/^    fn poll(&mut self) -> Poll<T, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/for_each.rs	/^    fn poll(&mut self) -> Poll<(), S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    fn poll(&mut self) -> Poll<(T, U), T::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/future.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn poll(&mut self) -> Poll<Option<T::Item>, T::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_ok.rs	/^    fn poll(&mut self) -> Poll<Option<I::Item>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/iter_result.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    fn poll(&mut self) -> Poll<Option<U>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/merge.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^        fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error>;$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/once.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, U::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/poll_fn.rs	/^    fn poll(&mut self) -> Poll<Option<T>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/repeat.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/select.rs	/^    fn poll(&mut self) -> Poll<Option<S1::Item>, S1::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    fn poll(&mut self) -> Poll<Option<S::Item>, S::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    fn poll(&mut self) -> Poll<Option<U::Item>, U::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^    fn poll(&mut self) -> Poll<Option<It>, Fut::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/zip.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn poll(&mut self) -> Poll<BiLockAcquired<T>, ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn poll(&mut self) -> Poll<Option<I>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn poll(&mut self) -> Poll<Option<T>, ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn poll(&mut self) -> Poll<T, Canceled> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn poll(&mut self) -> Poll<Option<I>, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    fn poll(&mut self) -> Poll<T, E> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/shutdown.rs	/^    fn poll(&mut self) -> Poll<(), ()> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn poll(&mut self) -> Poll<(), Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^  fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^  fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^  fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {$/;"	f
poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^    fn poll(&mut self) -> Poll<Self::Item, Self::Error> {$/;"	f
poll_cancel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn poll_cancel(&self) -> Poll<(), ()> {$/;"	f
poll_cancel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_cancel	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    pub fn poll_cancel(&mut self) -> Poll<(), ()> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError>;$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn poll_complete(&mut self) -> Poll<(), Fut::Error> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), Self::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    fn poll_complete(&mut self) -> Poll<(), S::SinkError> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_complete	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn poll_complete(&mut self) -> Poll<(), SendError<T>> {$/;"	f
poll_flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn poll_flush(&mut self, unpark: &Arc<Unpark>)$/;"	f
poll_flush_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn poll_flush_notify<N>(&mut self,$/;"	f
poll_fn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/poll_fn.rs	/^pub fn poll_fn<T, E, F>(f: F) -> PollFn<F>$/;"	f
poll_fn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/poll_fn.rs	/^pub fn poll_fn<T, E, F>(f: F) -> PollFn<F>$/;"	f
poll_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn poll_future(&mut self, unpark: Arc<Unpark>) -> Poll<F::Item, F::Error> {$/;"	f
poll_future_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn poll_future_notify<N>(&mut self,$/;"	f
poll_lock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    pub fn poll_lock(&self) -> Async<BiLockGuard<T>> {$/;"	f
poll_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn poll_read(&mut self) -> Async<()> {$/;"	f
poll_read2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn poll_read2(&self) -> Async<Ready> {$/;"	f
poll_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn poll_ready(&mut self) -> Poll<(), SendError<()>> {$/;"	f
poll_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn poll_ready(&mut self, mask: Ready) -> Async<Ready> {$/;"	f
poll_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn poll_stream(&mut self, unpark: Arc<Unpark>)$/;"	f
poll_stream_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn poll_stream_notify<N>(&mut self,$/;"	f
poll_unparked	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn poll_unparked(&mut self, do_park: bool) -> Async<()> {$/;"	f
poll_write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn poll_write(&mut self) -> Async<()> {$/;"	f
pop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^    pub unsafe fn pop(&self) -> PopResult<T> {$/;"	f
pop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn pop(&mut self) -> DecodeResult<u8> {$/;"	f
pop_front	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn pop_front(&mut self) -> Option<Arc<Node<U>>> {$/;"	f
pos	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  fn pos(algorithm: Algorithm) -> u8 {$/;"	f
prepend_label	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn prepend_label(&self, label: Rc<String>) -> Self {$/;"	f
preserve	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn preserve<T, I>(vec: &mut Vec<T>, indexes: I) where$/;"	f
prop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                    fn prop(n: $ty_int) -> bool {$/;"	f
prop	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                    fn prop(numbers: Vec<$ty_int>) -> bool {$/;"	f
ptr2arc	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^unsafe fn ptr2arc<T>(ptr: *const T) -> Arc<T> {$/;"	f
ptr2arc	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^unsafe fn ptr2arc<T>(ptr: *const T) -> Arc<T> {$/;"	f
push	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_ordered.rs	/^    pub fn push(&mut self, future: T) {$/;"	f
push	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    pub fn push(&mut self, future: T) {$/;"	f
push	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/queue.rs	/^    pub fn push(&self, t: T) {$/;"	f
push_back	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn push_back(&mut self, node: Arc<Node<U>>) -> *const Node<U> {$/;"	f
push_to_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn push_to_str(collect: &mut Option<String>, ch: char) -> LexerResult<()> {$/;"	f
put	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put<T: IntoBuf>(&mut self, src: T) where Self: Sized {$/;"	f
put_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_f32<T: ByteOrder>(&mut self, n: f32) {$/;"	f
put_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_f64<T: ByteOrder>(&mut self, n: f64) {$/;"	f
put_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_i16<T: ByteOrder>(&mut self, n: i16) {$/;"	f
put_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_i32<T: ByteOrder>(&mut self, n: i32) {$/;"	f
put_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_i64<T: ByteOrder>(&mut self, n: i64) {$/;"	f
put_i8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_i8(&mut self, n: i8) {$/;"	f
put_i8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn put_i8(&mut self, n: i8) {$/;"	f
put_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_int<T: ByteOrder>(&mut self, n: i64, nbytes: usize) {$/;"	f
put_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_slice(&mut self, src: &[u8]) {$/;"	f
put_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn put_slice(&mut self, src: &[u8]) {$/;"	f
put_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_u16<T: ByteOrder>(&mut self, n: u16) {$/;"	f
put_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_u32<T: ByteOrder>(&mut self, n: u32) {$/;"	f
put_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_u64<T: ByteOrder>(&mut self, n: u64) {$/;"	f
put_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_u8(&mut self, n: u8) {$/;"	f
put_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn put_u8(&mut self, n: u8) {$/;"	f
put_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn put_uint<T: ByteOrder>(&mut self, n: u64, nbytes: usize) {$/;"	f
qc_byte_order	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! qc_byte_order {$/;"	d
qc_bytes_ext	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! qc_bytes_ext {$/;"	d
qc_sized	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    pub fn qc_sized<A: Testable>(f: A, size: u64) {$/;"	f
qc_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! qc_slice {$/;"	d
qc_unsized	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn qc_unsized<A: Testable>(f: A) {$/;"	f
query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn query(&self, name: &domain::Name, query_class: DNSClass, query_type: RecordType) -> ClientResult<Message> {$/;"	f
query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn query(&mut self, name: domain::Name, query_class: DNSClass, query_type: RecordType)$/;"	f
query_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn query_class(&mut self, query_class: DNSClass) -> &mut Self { self.query_class = query_class; self }$/;"	f
query_count	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn query_count(&mut self, query_count: u16) -> &mut Self { self.query_count = query_count; self }$/;"	f
query_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  pub fn query_type(&mut self, query_type: RecordType) -> &mut Self { self.query_type = query_type; self }$/;"	f
queue_push_and_signal	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn queue_push_and_signal(&self, msg: Option<T>) {$/;"	f
quoted_txt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn quoted_txt() {$/;"	f
rc_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^pub fn rc_future<I>(future: I) -> RcFuture<I::Future>$/;"	f
rdata	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn rdata(&mut self, rdata: RData) -> &mut Self { self.rdata = rdata; self }$/;"	f
reactor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn reactor(&self) -> &Handle {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/reader.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Algorithm> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Name> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<Ipv4Addr> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<Ipv6Addr> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<DNSKEY> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<DS> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<MX> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/name.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<Name> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<NSEC> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<NSEC3> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<NSEC3PARAM> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<NULL> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<OPT> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<SIG> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<SOA> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^pub fn read(decoder: &mut BinDecoder) -> DecodeResult<SRV> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^pub fn read(decoder: &mut BinDecoder, rdata_length: u16) -> DecodeResult<TXT> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  pub fn read(decoder: &mut BinDecoder, record_type: RecordType, rdata_length: u16) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Self> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<Record> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn read(_: &mut BinDecoder) -> DecodeResult<Vec<u8>> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<S>;$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<i32> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<u16> {$/;"	f
read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/mod.rs	/^  fn read(decoder: &mut BinDecoder) -> DecodeResult<u32> {$/;"	f
read_big_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn read_big_endian() {$/;"	f
read_character_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn read_character_data() {$/;"	f
read_character_data	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_character_data(&mut self) -> DecodeResult<String> {$/;"	f
read_domain_name	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub fn read_domain_name<R: AsyncRead + Send + 'static>($/;"	f
read_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f32<T: ByteOrder>(&mut self) -> Result<f32> {$/;"	f
read_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_f32(buf: &[u8]) -> f32 {$/;"	f
read_f32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f32_into<T: ByteOrder>($/;"	f
read_f32_into_unchecked	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f32_into_unchecked<T: ByteOrder>($/;"	f
read_f32_into_unchecked	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_f32_into_unchecked(src: &[u8], dst: &mut [f32]) {$/;"	f
read_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f64<T: ByteOrder>(&mut self) -> Result<f64> {$/;"	f
read_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_f64(buf: &[u8]) -> f64 {$/;"	f
read_f64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f64_into<T: ByteOrder>($/;"	f
read_f64_into_unchecked	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_f64_into_unchecked<T: ByteOrder>($/;"	f
read_f64_into_unchecked	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_f64_into_unchecked(src: &[u8], dst: &mut [f64]) {$/;"	f
read_from	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn read_from<R: AsyncRead + 'static>($/;"	f
read_from	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn read_from<R: AsyncRead + Send + 'static>($/;"	f
read_i128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i128<T: ByteOrder>(&mut self) -> Result<i128> {$/;"	f
read_i128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i128(buf: &[u8]) -> i128 {$/;"	f
read_i128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i128_into<T: ByteOrder>($/;"	f
read_i128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i128_into(src: &[u8], dst: &mut [i128]) {$/;"	f
read_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i16<T: ByteOrder>(&mut self) -> Result<i16> {$/;"	f
read_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i16(buf: &[u8]) -> i16 {$/;"	f
read_i16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i16_into<T: ByteOrder>(&mut self, dst: &mut [i16]) -> Result<()> {$/;"	f
read_i16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i16_into(src: &[u8], dst: &mut [i16]) {$/;"	f
read_i24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i24<T: ByteOrder>(&mut self) -> Result<i32> {$/;"	f
read_i24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i24(buf: &[u8]) -> i32 {$/;"	f
read_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i32<T: ByteOrder>(&mut self) -> Result<i32> {$/;"	f
read_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i32(buf: &[u8]) -> i32 {$/;"	f
read_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn read_i32() {$/;"	f
read_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_i32(&mut self) -> DecodeResult<i32> {$/;"	f
read_i32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i32_into<T: ByteOrder>(&mut self, dst: &mut [i32]) -> Result<()> {$/;"	f
read_i32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i32_into(src: &[u8], dst: &mut [i32]) {$/;"	f
read_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i64<T: ByteOrder>(&mut self) -> Result<i64> {$/;"	f
read_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i64(buf: &[u8]) -> i64 {$/;"	f
read_i64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i64_into<T: ByteOrder>(&mut self, dst: &mut [i64]) -> Result<()> {$/;"	f
read_i64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_i64_into(src: &[u8], dst: &mut [i64]) {$/;"	f
read_i8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_i8(&mut self) -> Result<i8> {$/;"	f
read_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_int<T: ByteOrder>(&mut self, nbytes: usize) -> Result<i64> {$/;"	f
read_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_int(buf: &[u8], nbytes: usize) -> i64 {$/;"	f
read_int128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_int128<T: ByteOrder>(&mut self, nbytes: usize) -> Result<i128> {$/;"	f
read_int128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_int128(buf: &[u8], nbytes: usize) -> i128 {$/;"	f
read_little_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn read_little_endian() {$/;"	f
read_native_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn read_native_endian() {$/;"	f
read_num_bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^macro_rules! read_num_bytes {$/;"	d
read_records	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn read_records(decoder: &mut BinDecoder, count: usize, is_additional: bool) -> DecodeResult<(Vec<Record>, Option<Edns>, Vec<Record>)> {$/;"	f
read_request	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^fn read_request(conn: TcpStream) -> Box<Future<Item = (TcpStream, socks5::RelayRequest), Error = io::Error> + Send> {$/;"	f
read_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^macro_rules! read_slice {$/;"	d
read_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u128<T: ByteOrder>(&mut self) -> Result<u128> {$/;"	f
read_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u128(buf: &[u8]) -> u128 {$/;"	f
read_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u128(buf: &[u8]) -> u128;$/;"	f
read_u128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u128_into<T: ByteOrder>($/;"	f
read_u128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u128_into(src: &[u8], dst: &mut [u128]) {$/;"	f
read_u128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u128_into(src: &[u8], dst: &mut [u128]);$/;"	f
read_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u16<T: ByteOrder>(&mut self) -> Result<u16> {$/;"	f
read_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u16(buf: &[u8]) -> u16 {$/;"	f
read_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u16(buf: &[u8]) -> u16;$/;"	f
read_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn read_u16() {$/;"	f
read_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_u16(&mut self) -> DecodeResult<u16> {$/;"	f
read_u16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u16_into<T: ByteOrder>(&mut self, dst: &mut [u16]) -> Result<()> {$/;"	f
read_u16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u16_into(src: &[u8], dst: &mut [u16]) {$/;"	f
read_u16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u16_into(src: &[u8], dst: &mut [u16]);$/;"	f
read_u24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u24<T: ByteOrder>(&mut self) -> Result<u32> {$/;"	f
read_u24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u24(buf: &[u8]) -> u32 {$/;"	f
read_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u32<T: ByteOrder>(&mut self) -> Result<u32> {$/;"	f
read_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u32(buf: &[u8]) -> u32 {$/;"	f
read_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u32(buf: &[u8]) -> u32;$/;"	f
read_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^fn read_u32() {$/;"	f
read_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_u32(&mut self) -> DecodeResult<u32> {$/;"	f
read_u32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u32_into<T: ByteOrder>(&mut self, dst: &mut [u32]) -> Result<()> {$/;"	f
read_u32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u32_into(src: &[u8], dst: &mut [u32]) {$/;"	f
read_u32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u32_into(src: &[u8], dst: &mut [u32]);$/;"	f
read_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u64<T: ByteOrder>(&mut self) -> Result<u64> {$/;"	f
read_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u64(buf: &[u8]) -> u64 {$/;"	f
read_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u64(buf: &[u8]) -> u64;$/;"	f
read_u64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u64_into<T: ByteOrder>(&mut self, dst: &mut [u64]) -> Result<()> {$/;"	f
read_u64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u64_into(src: &[u8], dst: &mut [u64]) {$/;"	f
read_u64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_u64_into(src: &[u8], dst: &mut [u64]);$/;"	f
read_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_u8(&mut self) -> Result<u8> {$/;"	f
read_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_u8(&mut self) -> DecodeResult<u8> {$/;"	f
read_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_uint<T: ByteOrder>(&mut self, nbytes: usize) -> Result<u64> {$/;"	f
read_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_uint(buf: &[u8], nbytes: usize) -> u64 {$/;"	f
read_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_uint(buf: &[u8], nbytes: usize) -> u64;$/;"	f
read_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn read_uint128<T: ByteOrder>(&mut self, nbytes: usize) -> Result<u128> {$/;"	f
read_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_uint128(buf: &[u8], nbytes: usize) -> u128 {$/;"	f
read_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn read_uint128(buf: &[u8], nbytes: usize) -> u128;$/;"	f
read_v4_addr	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub fn read_v4_addr<R: AsyncRead + Send + 'static>($/;"	f
read_v6_addr	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^pub fn read_v6_addr<R: AsyncRead + Send + 'static>($/;"	f
read_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/decoder.rs	/^  pub fn read_vec(&mut self, len: usize) -> DecodeResult<Vec<u8>> {$/;"	f
reader	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn reader(self) -> Reader<Self> where Self: Sized {$/;"	f
ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  fn ready(&mut self, event_loop: &mut EventLoop<Self>, token: Token, events: EventSet) {$/;"	f
ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  fn ready(&mut self, event_loop: &mut EventLoop<Self>, token: Token, events: EventSet) {$/;"	f
ready2usize	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn ready2usize(_r: Ready) -> usize {$/;"	f
ready2usize	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn ready2usize(ready: Ready) -> usize {$/;"	f
ready2usize	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^fn ready2usize(ready: Ready) -> usize {$/;"	f
rebuild_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn rebuild_vec(ptr: *mut u8, mut len: usize, mut cap: usize, off: usize) -> Vec<u8> {$/;"	f
recursion_available	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn recursion_available(&mut self, recursion_available: bool) -> &mut Self {self.recursion_available = recursion_available; self }$/;"	f
recursion_available	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn recursion_available(&mut self, recursion_available: bool) -> &mut Self {self.header.recursion_available(recursion_available); self }$/;"	f
recursion_desired	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn recursion_desired(&mut self, recursion_desired: bool) -> &mut Self { self.recursion_desired = recursion_desired; self }$/;"	f
recursion_desired	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn recursion_desired(&mut self, recursion_desired: bool) -> &mut Self { self.header.recursion_desired(recursion_desired); self }$/;"	f
recursive_query_verify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn recursive_query_verify(&self, name: &domain::Name, rrset: Vec<&Record>, rrsigs: Vec<&Record>,$/;"	f
recv	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn recv(&self) -> Poll<T, Canceled> {$/;"	f
ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  static ref IPV4_ZERO: Ipv4Addr = Ipv4Addr::new(0,0,0,0);$/;"	c
ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  static ref IPV6_ZERO: Ipv6Addr = Ipv6Addr::new(0,0,0,0,0,0,0,0);$/;"	c
register	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    pub fn register(&self) {$/;"	f
register_task	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/atomic_task.rs	/^    pub fn register_task(&self, task: Task) {$/;"	f
release_node	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn release_node(&mut self, node: Arc<Node<T>>) {$/;"	f
release_node	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^fn release_node<U>(node: Arc<Node<U>>) {$/;"	f
release_shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn release_shared(ptr: *mut Shared) {$/;"	f
remaining	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn remaining(&self) -> usize;$/;"	f
remaining	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    fn remaining(&self) -> usize {$/;"	f
remaining_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remaining_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn remaining_mut(&self) -> usize;$/;"	f
remaining_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/chain.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remaining_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn remaining_mut(&self) -> usize {$/;"	f
remote_addr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^  pub fn remote_addr(&self) -> SocketAddr {$/;"	f
remove	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    unsafe fn remove(&mut self, node: *const Node<U>) -> Arc<Node<U>> {$/;"	f
remove	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn remove(&mut self, record: &Record, serial: u32) -> bool {$/;"	f
remove_buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn remove_buffer(&mut self) -> Vec<u8> {$/;"	f
repeat	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/repeat.rs	/^pub fn repeat<T, E>(item: T) -> Repeat<T, E>$/;"	f
reserve	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn reserve(&mut self, additional: usize) {$/;"	f
reserve	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn reserve(&mut self, extra: usize) {$/;"	f
reset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn reset(&mut self) {$/;"	f
response_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn response_code(&mut self, response_code: ResponseCode) -> &mut Self { self.response_code = response_code.low(); self }$/;"	f
response_code	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn response_code(&mut self, response_code: ResponseCode) -> &mut Self { self.header.response_code(response_code); self }$/;"	f
result	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/result.rs	/^pub fn result<T, E>(r: result::Result<T, E>) -> FutureResult<T, E> {$/;"	f
reunite	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    pub fn reunite(self, other: SplitSink<S>) -> Result<S, ReuniteError<S>> {$/;"	f
reunite	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    pub fn reunite(self, other: SplitStream<S>) -> Result<S, ReuniteError<S>> {$/;"	f
reunite	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    pub fn reunite(self, other: Self) -> Result<T, ReuniteError<T>> {$/;"	f
root	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn root() -> Self {$/;"	f
rr_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn rr_type(&mut self, rr_type: RecordType) -> &mut Self { self.rr_type = rr_type; self }$/;"	f
run	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn run(self) {$/;"	f
run	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn run(&mut self) -> Result<(), RunError> {$/;"	f
run	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub fn run<F, R>(f: F) -> R$/;"	f
run	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^pub fn run<F>(future: F)$/;"	f
run2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^pub fn run2<F>(future: F)$/;"	f
run_timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn run_timeout(&mut self, duration: Duration)$/;"	f
run_timeout2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn run_timeout2(&mut self, dur: Option<Duration>)$/;"	f
schedule	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn schedule(&mut self, item: Box<Future<Item = (), Error = ()>>) {$/;"	f
secure_query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn secure_query(&self, query_name: &domain::Name, query_class: DNSClass, query_type: RecordType) -> ClientResult<Message> {$/;"	f
select	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn select<B>(self, other: B) -> Select<Self, B::Future>$/;"	f
select	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn select<S>(self, other: S) -> Select<Self, S>$/;"	f
select2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn select2<B>(self, other: B) -> Select2<Self, B::Future>$/;"	f
select_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_all.rs	/^pub fn select_all<I>(iter: I) -> SelectAll<<I::Item as IntoFuture>::Future>$/;"	f
select_ok	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/select_ok.rs	/^pub fn select_ok<I>(iter: I) -> SelectOk<<I::Item as IntoFuture>::Future>$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn send(self, item: Self::SinkItem) -> Send<Self>$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/wait.rs	/^    pub fn send(&mut self, value: S::SinkItem) -> Result<(), S::SinkError> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/channel.rs	/^    pub fn send(self, t: Result<T, E>) -> FutureSender<T, E> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    fn send(&self, t: T) -> Result<(), T> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^    pub fn send(self, t: T) -> Result<(), T> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    pub fn send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^    pub fn send(self, val: T) -> Result<(), T> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_connection.rs	/^  fn send(&mut self, bytes: Vec<u8>) -> ClientResult<Vec<u8>>;$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn send(&mut self, buffer: Vec<u8>) -> io::Result<()> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn send(&mut self, buffer: Vec<u8>) -> io::Result<()>;$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn send(&mut self, message: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  fn send(&mut self, message: Message) -> Box<Future<Item=Message, Error=ClientError>>;$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^    fn send(&mut self, _: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^  fn send(&mut self, message: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^    fn send(&mut self, _: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  fn send(&mut self, message: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  fn send(&mut self, mut message: Message) -> Box<Future<Item=Message, Error=ClientError>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/lib.rs	/^  fn send(&mut self, buffer: Vec<u8>) -> io::Result<()> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  fn send(&mut self, buffer: Vec<u8> ) -> ClientResult<Vec<u8>> {$/;"	f
send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  fn send(&mut self, buffer: Vec<u8>) -> ClientResult<Vec<u8>> {$/;"	f
send_all	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn send_all<S>(self, stream: S) -> SendAll<Self, S>$/;"	f
send_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn send_message(&self, message: &Message) -> ClientResult<Message> {$/;"	f
serde_impl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^macro_rules! serde_impl {$/;"	d
serialize	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize_msg	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/handler.rs	/^  pub fn serialize_msg(mut buf: Vec<u8>, response: &Message) -> Vec<u8> {$/;"	f
set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^pub fn set<'a, F, R>(task: &BorrowedTask<'a>, f: F) -> R$/;"	f
set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub fn set<'a, F, R>(task: &BorrowedTask<'a>, f: F) -> R$/;"	f
set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^  pub fn set(&mut self, algorithm: Algorithm) {$/;"	f
set_buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/handler.rs	/^  pub fn set_buffer(&mut self, buffer: Vec<u8>) {$/;"	f
set_canonical_names	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn set_canonical_names(&mut self, canonical_names: bool) {$/;"	f
set_dns_class	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn set_dns_class(&mut self, dns_class: DNSClass) {$/;"	f
set_dnssec_ok	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn set_dnssec_ok(&mut self, dnssec_ok: bool) { self.dnssec_ok = dnssec_ok }$/;"	f
set_edns	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn set_edns(&mut self, edns: Edns) -> &mut Self { self.edns = Some(edns); self }$/;"	f
set_end	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn set_end(&mut self, end: usize) {$/;"	f
set_inline_len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn set_inline_len(&mut self, len: usize) {$/;"	f
set_len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub unsafe fn set_len(&mut self, len: usize) {$/;"	f
set_len	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn set_len(&mut self, len: usize) {$/;"	f
set_limit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/take.rs	/^    pub fn set_limit(&mut self, lim: usize) {$/;"	f
set_max_payload	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn set_max_payload(&mut self, max_payload: u16) { self.max_payload = max_payload }$/;"	f
set_option	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn set_option(&mut self, option: EdnsOption) { self.options.insert(option); }$/;"	f
set_rcode_high	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn set_rcode_high(&mut self, rcode_high: u8) { self.rcode_high = rcode_high }$/;"	f
set_spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn set_spawn<F, R>(&self, spawn: &mut SpawnLocal, f: F) -> R$/;"	f
set_start	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn set_start(&mut self, start: usize) {$/;"	f
set_ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn set_ttl(&mut self, ttl: u32) {$/;"	f
set_version	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^  pub fn set_version(&mut self, version: u8) { self.version = version }$/;"	f
set_waiter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/shared.rs	/^    fn set_waiter(&mut self) {$/;"	f
sha1_recursive_hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^  fn sha1_recursive_hash(salt: &[u8], bytes: Vec<u8>, iterations: u16) -> DnsSecResult<Vec<u8>> {$/;"	f
shallow_clone	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    unsafe fn shallow_clone(&self, mut_self: bool) -> Inner {$/;"	f
shared	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn shared(self) -> Shared<Self>$/;"	f
shutdown	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn shutdown(&mut self) -> Poll<(), io::Error> {$/;"	f
shutdown_now	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn shutdown_now(mut self) -> Shutdown {$/;"	f
shutdown_on_idle	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn shutdown_on_idle(mut self) -> Shutdown {$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn sign(&mut self, signer: &Signer, inception_time: u32) -> DnsSecResult<()> { Message::sign(self, signer, inception_time) }$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn sign(&mut self, signer: &Signer, inception_time: u32) -> DnsSecResult<()>;$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn sign(&mut self, _: &Signer, _: u32) -> DnsSecResult<()> {$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn sign(&mut self, signer: &Signer, inception_time: u32) -> DnsSecResult<()> {$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn sign(&self, algorithm: Algorithm, hash: &[u8]) -> DnsSecResult<Vec<u8>> {$/;"	f
sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn sign(&self, hash: &[u8]) -> DnsSecResult<Vec<u8>> {$/;"	f
sign_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn sign_message(&self, message: &Message) -> DnsSecResult<Vec<u8>> {$/;"	f
signal	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn signal(&self) {$/;"	f
sink_from_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn sink_from_err<E: From<Self::SinkError>>(self) -> from_err::SinkFromErr<Self, E>$/;"	f
sink_map_err	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn sink_map_err<F, E>(self, f: F) -> SinkMapErr<Self, F>$/;"	f
sink_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    fn sink_mut(&mut self) -> &mut S {$/;"	f
sink_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    fn sink_mut(&mut self) -> &mut T {$/;"	f
sink_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    pub fn sink_mut(&mut self) -> Option<&mut U> {$/;"	f
sink_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    pub fn sink_ref(&self) -> Option<&U> {$/;"	f
size_hint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/iter.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
skip	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn skip(self, amt: u64) -> Skip<Self>$/;"	f
skip_while	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn skip_while<P, R>(self, pred: P) -> SkipWhile<Self, P, R>$/;"	f
slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn slice(&self, begin: usize, end: usize) -> Bytes {$/;"	f
slice_from	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn slice_from(&self, begin: usize) -> Bytes {$/;"	f
slice_lengths	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! slice_lengths {$/;"	d
slice_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn slice_to(&self, end: usize) -> Bytes {$/;"	f
slice_to_u8_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^unsafe fn slice_to_u8_mut<T: Copy>(slice: &mut [T]) -> &mut [u8] {$/;"	f
smoke	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    fn smoke() {$/;"	f
soa	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn soa() {$/;"	f
socks5	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^pub mod socks5;$/;"	m
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub fn spawn<S, E>(stream: S, executor: &E, buffer: usize) -> SpawnHandle<S::Item, S::Error>$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub fn spawn<F, E>(future: F, executor: &E) -> SpawnHandle<F::Item, F::Error>$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub fn spawn<T>(obj: T) -> Spawn<T> {$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub fn spawn<S, E>(stream: S, executor: &E, buffer: usize) -> SpawnHandle<S::Item, S::Error>$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub fn spawn<F, E>(future: F, executor: &E) -> SpawnHandle<F::Item, F::Error>$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn spawn(&mut self, future: Box<Future<Item = (), Error = ()> + Send>)$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn spawn<F>(&mut self, future: F) -> &mut Self$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub fn spawn<F>(future: F)$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^pub fn spawn<F>(f: F) -> Spawn$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn spawn<F>(&mut self, future: F) -> &mut Self$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    fn spawn(&mut self, f: Task2) -> Result<(), futures2::executor::SpawnError> {$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    fn spawn(&mut self, future: Box<Future<Item = (), Error = ()> + Send>)$/;"	f
spawn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    pub fn spawn<F>(&self, future: F)$/;"	f
spawn2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn spawn2(&mut self, _future: Box<futures2::Future<Item = (), Error = futures2::Never> + Send>)$/;"	f
spawn2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/mod.rs	/^pub fn spawn2<F>(f: F) -> Spawn$/;"	f
spawn2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/mod.rs	/^    pub fn spawn2<F>(&mut self, future: F) -> &mut Self$/;"	f
spawn2	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    fn spawn2(&mut self, future: Box<futures2::Future<Item = (), Error = futures2::Never> + Send>)$/;"	f
spawn_fn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/oneshot.rs	/^pub fn spawn_fn<F, R, E>(f: F, executor: &E) -> SpawnHandle<R::Item, R::Error>$/;"	f
spawn_fn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/oneshot.rs	/^pub fn spawn_fn<F, R, E>(f: F, executor: &E) -> SpawnHandle<R::Item, R::Error>$/;"	f
spawn_local	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn spawn_local(&mut self, future: Box<Future<Item = (), Error = ()>>) {$/;"	f
spawn_local	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn spawn_local(&mut self, future: Box<Future<Item = (), Error = ()>>);$/;"	f
spawn_local	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn spawn_local(&mut self, future: Box<Future<Item = (), Error = ()>>)$/;"	f
spawn_unbounded	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub fn spawn_unbounded<S, E>(stream: S, executor: &E) -> SpawnHandle<S::Item, S::Error>$/;"	f
spawn_unbounded	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub fn spawn_unbounded<S,E>(stream: S, executor: &E) -> SpawnHandle<S::Item, S::Error>$/;"	f
split	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/either.rs	/^    pub fn split(self) -> (T, Either<A, B>) {$/;"	f
split	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn split(self) -> (SplitSink<Self>, SplitStream<Self>)$/;"	f
split	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^pub fn split<S: Stream + Sink>(s: S) -> (SplitSink<S>, SplitStream<S>) {$/;"	f
split_off	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn split_off(&mut self, at: usize) -> Inner {$/;"	f
split_off	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn split_off(&mut self, at: usize) -> Bytes {$/;"	f
split_off	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn split_off(&mut self, at: usize) -> BytesMut {$/;"	f
split_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn split_to(&mut self, at: usize) -> Inner {$/;"	f
split_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn split_to(&mut self, at: usize) -> Bytes {$/;"	f
split_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn split_to(&mut self, at: usize) -> BytesMut {$/;"	f
start_poll	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^    pub unsafe fn start_poll(&self) {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/fanout.rs	/^    fn start_send($/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/from_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/map_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^        fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn start_send(&mut self, item: Self::SinkItem)$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Fut::Error> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    fn start_send(&mut self, i: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/and_then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffer_unordered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/buffered.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/filter_map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/flatten.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/from_err.rs	/^    fn start_send(&mut self, item: Self::SinkItem) -> ::StartSend<Self::SinkItem, Self::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/fuse.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/inspect_err.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/map_err.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/or_else.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/peek.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/skip_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/split.rs	/^    fn start_send(&mut self, item: S::SinkItem)$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/take_while.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/then.rs	/^    fn start_send(&mut self, item: S::SinkItem) -> ::StartSend<S::SinkItem, S::SinkError> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn start_send(&mut self, value: S::SinkItem, unpark: &Arc<Unpark>)$/;"	f
start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    fn start_send(&mut self, msg: T) -> StartSend<T, SendError<T>> {$/;"	f
start_send_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn start_send_notify<N>(&mut self,$/;"	f
status	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn status(&self) -> Result<(), SpawnError> {$/;"	f
status	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/task_executor.rs	/^    fn status(&self) -> Result<(), futures2::executor::SpawnError> {$/;"	f
store_label_pointer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn store_label_pointer(&mut self, labels: Vec<Rc<String>>) {$/;"	f
stream_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    fn stream_mut(&mut self) -> &mut Fuse<U> {$/;"	f
stream_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    pub fn stream_mut(&mut self) -> Option<&mut T> {$/;"	f
stream_ref	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    pub fn stream_ref(&self) -> Option<&T> {$/;"	f
stub	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    fn stub(&self) -> *const Node<T> {$/;"	f
stub	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    fn stub(&self) -> *const Node<U> {$/;"	f
take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf.rs	/^    fn take(self, limit: usize) -> Take<Self>$/;"	f
take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn take(&mut self) -> BytesMut {$/;"	f
take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/join.rs	/^    fn take(&mut self) -> A::Item {$/;"	f
take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/chunks.rs	/^    fn take(&mut self) -> Vec<S::Item> {$/;"	f
take	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn take(self, amt: u64) -> Take<Self>$/;"	f
take_additionals	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn take_additionals(&mut self) -> Vec<Record> { mem::replace(&mut self.additionals, vec![]) }$/;"	f
take_answers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn take_answers(&mut self) -> Vec<Record> { mem::replace(&mut self.answers, vec![]) }$/;"	f
take_name_servers	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn take_name_servers(&mut self) -> Vec<Record> { mem::replace(&mut self.name_servers, vec![]) }$/;"	f
take_result	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_result	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    fn take_result(&mut self) -> (T, U) {$/;"	f
take_sink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send.rs	/^    fn take_sink(&mut self) -> S {$/;"	f
take_while	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn take_while<P, R>(self, pred: P) -> TakeWhile<Self, P, R>$/;"	f
task_executor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^pub fn task_executor() -> TaskExecutor {$/;"	f
task_local	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^macro_rules! task_local {$/;"	d
tcp_client_stream_test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^fn tcp_client_stream_test(server_addr: IpAddr) {$/;"	f
tcp_client_stream_test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^fn tcp_client_stream_test(server_addr: IpAddr) {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/dnskey.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/ds.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/mx.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/name.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/nsec3param.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/opt.rs	/^pub fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/sig.rs	/^fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/soa.rs	/^fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/srv.rs	/^fn test() {$/;"	f
test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/txt.rs	/^fn test() {$/;"	f
test_base_name	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_base_name() {$/;"	f
test_calculate_key_tag	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^fn test_calculate_key_tag() {$/;"	f
test_cmp_ignore_case	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_cmp_ignore_case() {$/;"	f
test_emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^  fn test_emit() {$/;"	f
test_emit_and_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^fn test_emit_and_read(message: Message) {$/;"	f
test_emit_and_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn test_emit_and_read() {$/;"	f
test_emit_and_read_header	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^fn test_emit_and_read_header() {$/;"	f
test_emit_and_read_query	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^fn test_emit_and_read_query() {$/;"	f
test_emit_and_read_records	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^fn test_emit_and_read_records() {$/;"	f
test_emit_data_set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^pub fn test_emit_data_set<S, F>(data_set: Vec<(S, Vec<u8>)>, emit_func: F)$/;"	f
test_encode_decode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/edns.rs	/^fn test_encode_decode() {$/;"	f
test_error	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  fn test_error() {$/;"	f
test_has	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^fn test_has() {$/;"	f
test_hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^fn test_hash() {$/;"	f
test_hash_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^fn test_hash_rrset() {$/;"	f
test_hashing	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^fn test_hashing() {$/;"	f
test_insert	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_insert() {$/;"	f
test_insert_cname	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_insert_cname() {$/;"	f
test_insert_soa	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_insert_soa() {$/;"	f
test_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/algorithm.rs	/^fn test_into() {$/;"	f
test_iterator	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^fn test_iterator() {$/;"	f
test_kjqmt7v	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/trust_anchor.rs	/^fn test_kjqmt7v() {$/;"	f
test_known_hashes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/nsec3.rs	/^fn test_known_hashes() {$/;"	f
test_legit_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^fn test_legit_message() {$/;"	f
test_memoized	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/memoize_client_handle.rs	/^  fn test_memoized() {$/;"	f
test_next_random_socket	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^fn test_next_random_socket() {$/;"	f
test_order	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dns_class.rs	/^fn test_order() {$/;"	f
test_order	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn test_order() {$/;"	f
test_order	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_type.rs	/^fn test_order() {$/;"	f
test_order	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  fn test_order() {$/;"	f
test_original_capacity_from_repr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn test_original_capacity_from_repr() {$/;"	f
test_original_capacity_to_repr	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^fn test_original_capacity_to_repr() {$/;"	f
test_parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^fn test_parse() {$/;"	f
test_parse	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^  fn test_parse() {$/;"	f
test_partial_cmp	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_partial_cmp() {$/;"	f
test_partial_cmp_eq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_partial_cmp_eq() {$/;"	f
test_pointer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_pointer() {$/;"	f
test_prepend	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_prepend() {$/;"	f
test_preserve	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn test_preserve() {$/;"	f
test_rc_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^fn test_rc_future() {$/;"	f
test_rc_future_failed	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/rc_future.rs	/^fn test_rc_future_failed() {$/;"	f
test_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/aaaa.rs	/^  fn test_read() {$/;"	f
test_read	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn test_read() {$/;"	f
test_read_and_emit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/query.rs	/^fn test_read_and_emit() {$/;"	f
test_read_data_set	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/bin_tests.rs	/^pub fn test_read_data_set<E, F>(data_set: Vec<(E, Vec<u8>)>, read_func: F)$/;"	f
test_remove	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_remove() {$/;"	f
test_remove_ns	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_remove_ns() {$/;"	f
test_remove_soa	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn test_remove_soa() {$/;"	f
test_retry	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/retry_client_handle.rs	/^  fn test_retry() {$/;"	f
test_sign_and_verify_message_sig0	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^fn test_sign_and_verify_message_sig0() {$/;"	f
test_sign_and_verify_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^fn test_sign_and_verify_rrset() {$/;"	f
test_tcp_client_stream_ipv4	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^fn test_tcp_client_stream_ipv4() {$/;"	f
test_tcp_client_stream_ipv4	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^fn test_tcp_client_stream_ipv4() {$/;"	f
test_tcp_client_stream_ipv6	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_stream.rs	/^fn test_tcp_client_stream_ipv6() {$/;"	f
test_tcp_client_stream_ipv6	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^fn test_tcp_client_stream_ipv6() {$/;"	f
test_udp_client_stream_ipv4	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^fn test_udp_client_stream_ipv4() {$/;"	f
test_udp_client_stream_ipv6	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^fn test_udp_client_stream_ipv6() {$/;"	f
test_udp_stream_ipv4	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^fn test_udp_stream_ipv4() {$/;"	f
test_udp_stream_ipv6	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^fn test_udp_stream_ipv6() {$/;"	f
test_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/supported_algorithm.rs	/^fn test_vec() {$/;"	f
test_write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^fn test_write() {$/;"	f
test_write_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/a.rs	/^  fn test_write_to() {$/;"	f
test_write_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn test_write_to() {$/;"	f
test_zone_of	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_zone_of() {$/;"	f
test_zone_of_case	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn test_zone_of_case() {$/;"	f
then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn then<F, B>(self, f: F) -> Then<Self, B, F>$/;"	f
then	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn then<F, U>(self, f: F) -> Then<Self, F, U>$/;"	f
threadpool_builder	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/runtime/builder.rs	/^    pub fn threadpool_builder(&mut self, val: ThreadPoolBuilder) -> &mut Self {$/;"	f
tick	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    fn tick(&mut self) -> bool {$/;"	f
tick	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn tick(&mut self) -> bool {$/;"	f
tick	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/scheduler.rs	/^    pub fn tick(&mut self, enter: &mut Enter, num_futures: &mut usize) -> bool$/;"	f
timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_client_connection.rs	/^  fn timeout(&mut self, event_loop: &mut EventLoop<Self>, _: ()) {$/;"	f
timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_connection.rs	/^  fn timeout(&mut self, event_loop: &mut EventLoop<Self>, _: ()) {$/;"	f
tls_slot	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^fn tls_slot() -> *const Cell<*mut u8> {$/;"	f
to_bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  fn to_bytes(&self) -> Vec<u8> {$/;"	f
to_dnskey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn to_dnskey(&self, name: Name, ttl: u32, algorithm: Algorithm) -> Record {$/;"	f
to_hash	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/digest_type.rs	/^  pub fn to_hash(&self) -> MessageDigest {$/;"	f
to_lowercase	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn to_lowercase(&self) -> Name {$/;"	f
to_owned	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn to_owned(&self) -> TaskUnpark {$/;"	f
to_owned	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn to_owned(&self) -> UnparkEvents {$/;"	f
to_owned	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn to_owned(&self) -> TaskUnpark {$/;"	f
to_owned	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn to_owned(&self) -> UnparkEvents {$/;"	f
to_record_type	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/record_data.rs	/^  pub fn to_record_type(&self) -> RecordType {$/;"	f
to_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/response_code.rs	/^  pub fn to_str(&self) -> &'static str {$/;"	f
to_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn to_vec(&self) -> Result<Vec<u8>, EncodeError> {$/;"	f
to_vec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn to_vec(&self) -> Vec<u8> {$/;"	f
too_small	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    macro_rules! too_small {$/;"	d
trim_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn trim_to(&self, num_labels: usize) -> Name {$/;"	f
truncate	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn truncate(&mut self, len: usize) {$/;"	f
truncate	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn truncate(&mut self, len: usize) {$/;"	f
truncate	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn truncate(&self) -> Self {$/;"	f
truncated	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/header.rs	/^  pub fn truncated(&mut self, truncated: bool) -> &mut Self { self.truncation = truncated; self }$/;"	f
truncated	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn truncated(&mut self, truncated: bool) -> &mut Self { self.header.truncated(truncated); self }$/;"	f
try_empty_buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/buffer.rs	/^    fn try_empty_buffer(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_empty_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/with_flat_map.rs	/^    fn try_empty_stream(&mut self) -> Poll<(), S::SinkError> {$/;"	f
try_lock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/lock.rs	/^    pub fn try_lock(&self) -> Option<TryLock<T>> {$/;"	f
try_mut	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn try_mut(mut self) -> Result<BytesMut, Bytes> {$/;"	f
try_park	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn try_park(&self) -> TryPark {$/;"	f
try_ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/poll.rs	/^macro_rules! try_ready {$/;"	d
try_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn try_send(&mut self, msg: T) -> Result<(), TrySendError<T>> {$/;"	f
try_start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/send_all.rs	/^    fn try_start_send(&mut self, item: U::Item) -> Poll<(), T::SinkError> {$/;"	f
try_start_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/forward.rs	/^    fn try_start_send(&mut self, item: T::Item) -> Poll<(), U::SinkError> {$/;"	f
ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn ttl(&mut self, ttl: u32) -> &mut Self { self.ttl = ttl; self }$/;"	f
turn	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/executor/current_thread/mod.rs	/^    pub fn turn(&mut self, duration: Option<Duration>)$/;"	f
udp_client_stream_test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_client_stream.rs	/^fn udp_client_stream_test(server_addr: IpAddr) {$/;"	f
udp_stream_test	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^fn udp_stream_test(server_addr: std::net::IpAddr) {$/;"	f
uint_bigger_buffer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn uint_bigger_buffer() {$/;"	f
unbounded	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unbounded	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unbounded_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    pub fn unbounded_send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
unbounded_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/unsync/mpsc.rs	/^    pub fn unbounded_send(&self, msg: T) -> Result<(), SendError<T>> {$/;"	f
uncoordinated_get_vec_pos	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn uncoordinated_get_vec_pos(&mut self) -> (usize, usize) {$/;"	f
uncoordinated_set_vec_pos	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn uncoordinated_set_vec_pos(&mut self, pos: usize, prev: usize) {$/;"	f
unextend_sign	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn unextend_sign(val: i64, nbytes: usize) -> u64 {$/;"	f
unextend_sign128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^fn unextend_sign128(val: i128, nbytes: usize) -> u128 {$/;"	f
unfold	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/unfold.rs	/^pub fn unfold<T, F, Fut, It>(init: T, f: F) -> Unfold<T, F, Fut>$/;"	f
unicode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/txt/master_lex.rs	/^  fn unicode() {$/;"	f
unlink	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/futures_unordered.rs	/^    unsafe fn unlink(&mut self, node: *const Node<T>) -> Arc<Node<T>> {$/;"	f
unlock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    fn unlock(&self) {$/;"	f
unlock	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/bilock.rs	/^    pub fn unlock(mut self) -> BiLock<T> {$/;"	f
unpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn unpark(&self) {$/;"	f
unpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn unpark(&self) {$/;"	f
unpark	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn unpark(&self);$/;"	f
unpark_one	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sync/mpsc/mod.rs	/^    fn unpark_one(&mut self) {$/;"	f
unsplit	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn unsplit(&mut self, other: BytesMut) {$/;"	f
unwrap_rdata	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn unwrap_rdata(self) -> RData { self.rdata }$/;"	f
update_counts	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  pub fn update_counts(&mut self) -> &mut Self {$/;"	f
update_header_counts	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/op/message.rs	/^  fn update_header_counts(&self, include_sig0: bool) -> Header {$/;"	f
updated	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  fn updated(&mut self, serial: u32) {$/;"	f
usize2ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn usize2ready(_r: usize) -> Ready {$/;"	f
usize2ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    pub fn usize2ready(bits: usize) -> Ready {$/;"	f
usize2ready	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^fn usize2ready(bits: usize) -> Ready {$/;"	f
usize2ready_aio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn usize2ready_aio(_ready: &mut UnixReady) {$/;"	f
usize2ready_aio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn usize2ready_aio(ready: &mut UnixReady) {$/;"	f
usize2ready_lio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn usize2ready_lio(_ready: &mut UnixReady) {$/;"	f
usize2ready_lio	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn usize2ready_lio(ready: &mut UnixReady) {$/;"	f
util	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/main.rs	/^mod util;$/;"	m
verify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/keypair.rs	/^  pub fn verify(&self, algorithm: Algorithm, hash: &[u8], signature: &[u8]) -> DnsSecResult<()> {$/;"	f
verify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn verify(&self, hash: &[u8], signature: &[u8]) -> DnsSecResult<()> {$/;"	f
verify_default_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_default_rrset<H>($/;"	f
verify_dnskey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn verify_dnskey(&self, dnskey: &Record) -> ClientResult<Vec<Record>> {$/;"	f
verify_dnskey_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_dnskey_rrset<H>($/;"	f
verify_message	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/dnssec/signer.rs	/^  pub fn verify_message(&self, message: &Message, signature: &[u8]) -> DnsSecResult<()> {$/;"	f
verify_nsec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn verify_nsec(&self, query_name: &domain::Name, query_type: RecordType,$/;"	f
verify_nsec	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_nsec(query: &Query, nsecs: Vec<&Record>) -> bool {$/;"	f
verify_nsec3	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  fn verify_nsec3(&self, query_name: &domain::Name, query_type: RecordType,$/;"	f
verify_rrset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_rrset<H>(client: SecureClientHandle<H>,$/;"	f
verify_rrset_with_dnskey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_rrset_with_dnskey(_: &DNSKEY, _: &SIG, _: &Rrset) -> ClientResult<()> {$/;"	f
verify_rrset_with_dnskey	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_rrset_with_dnskey(dnskey: &DNSKEY,$/;"	f
verify_rrsets	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^fn verify_rrsets<H>($/;"	f
visit_byte_buf	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	f
visit_bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_seq	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn visit_seq<V>(self, mut seq: V) -> Result<Self::Value, V::Error>$/;"	f
visit_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	f
visit_string	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/serde.rs	/^            fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	f
wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/future/mod.rs	/^    fn wait(self) -> result::Result<Self::Item, Self::Error>$/;"	f
wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn wait(self) -> Wait<Self>$/;"	f
wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn wait(self) -> Wait<Self>$/;"	f
wait	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/unpark_mutex.rs	/^    pub unsafe fn wait(&self, data: D) -> Result<(), D> {$/;"	f
wait_close	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn wait_close(&mut self) -> Result<(), S::SinkError> {$/;"	f
wait_flush	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn wait_flush(&mut self) -> Result<(), S::SinkError> {$/;"	f
wait_future	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn wait_future(&mut self) -> Result<F::Item, F::Error> {$/;"	f
wait_send	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn wait_send(&mut self, mut value: S::SinkItem)$/;"	f
wait_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn wait_stream(&mut self) -> Option<Result<S::Item, S::Error>> {$/;"	f
will_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn will_notify(&self, _other: &BorrowedEvents) -> bool {$/;"	f
will_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/core.rs	/^    pub fn will_notify(&self, other: &BorrowedUnpark) -> bool {$/;"	f
will_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn will_notify(&self, events: &BorrowedEvents) -> bool {$/;"	f
will_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    pub fn will_notify(&self, unpark: &BorrowedUnpark) -> bool {$/;"	f
will_notify_current	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^    pub fn will_notify_current(&self) -> bool {$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn with<U, F, Fut>(self, f: F) -> With<Self, U, F, Fut>$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^fn with<F: FnOnce(&BorrowedTask) -> R, R>(f: F) -> R {$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^    pub fn with<F, R>(&'static self, f: F) -> R$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/task_rc.rs	/^    pub fn with<F, R>(&self, f: F) -> R$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rdata/null.rs	/^  pub fn with(anything: Vec<u8>) -> NULL {$/;"	f
with	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/resource.rs	/^  pub fn with(name: domain::Name, rr_type: RecordType, ttl: u32) -> Record {$/;"	f
with_bound	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/udp/udp_stream.rs	/^  pub fn with_bound(socket: std::net::UdpSocket, loop_handle: Handle) -> (Self, BufStreamHandle) {$/;"	f
with_capacity	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn with_capacity(capacity: usize) -> Inner {$/;"	f
with_capacity	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn with_capacity(capacity: usize) -> Bytes {$/;"	f
with_capacity	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    pub fn with_capacity(capacity: usize) -> BytesMut {$/;"	f
with_current	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^    fn with_current<F, R>(f: F) -> R$/;"	f
with_filter	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn with_filter<F>(self, f: F) -> WithFilter<Self, F>$/;"	f
with_filter_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn with_filter_map<U, F>(self, f: F) -> WithFilterMap<Self, U, F>$/;"	f
with_flat_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn with_flat_map<U, F, St>(self, f: F) -> WithFlatMap<Self, U, F, St>$/;"	f
with_labels	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn with_labels(labels: Vec<String>) -> Self {$/;"	f
with_map	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/sink/mod.rs	/^    fn with_map<U, F>(self, f: F) -> WithMap<Self, U, F>$/;"	f
with_mode	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn with_mode(buf: &'a mut Vec<u8>, mode: EncodeMode) -> Self {$/;"	f
with_notify	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/mod.rs	/^pub fn with_notify<F, T, R>(notify: &T, id: usize, f: F) -> R$/;"	f
with_offset	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/serialize/binary/encoder.rs	/^  pub fn with_offset(buf: &'a mut Vec<u8>, offset: u32, mode: EncodeMode) -> Self {$/;"	f
with_tcp_stream	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/tcp/tcp_stream.rs	/^  pub fn with_tcp_stream(stream: TokioTcpStream) -> (Self, BufStreamHandle) {$/;"	f
with_timeout	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client_future.rs	/^  pub fn with_timeout(stream: Box<Future<Item=S, Error=io::Error>>,$/;"	f
with_trust_anchor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/client.rs	/^  pub fn with_trust_anchor(client_connection: C, trust_anchor: TrustAnchor) -> Client<C> {$/;"	f
with_trust_anchor	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/client/secure_client_handle.rs	/^  pub fn with_trust_anchor(client: H, trust_anchor: TrustAnchor) -> SecureClientHandle<H> {$/;"	f
with_ttl	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/rr_set.rs	/^  pub fn with_ttl(name: Name, record_type: RecordType, ttl: u32) -> Self {$/;"	f
with_unpark_event	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/mod.rs	/^pub fn with_unpark_event<F, R>(event: UnparkEvent, f: F) -> R$/;"	f
write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/writer.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	f
write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^    fn write(&mut self, _bytes: &[u8]) {$/;"	f
write	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.5/src/reactor/poll_evented.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write_big_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn write_big_endian() {$/;"	f
write_bytes	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/util.rs	/^pub fn write_bytes<W: AsyncWrite, B: AsRef<[u8]>>(w: W, b: B) -> WriteBytes<W, B> {$/;"	f
write_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_f32<T: ByteOrder>(&mut self, n: f32) -> Result<()> {$/;"	f
write_f32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_f32(buf: &mut [u8], n: f32) {$/;"	f
write_f32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_f32_into(src: &[f32], dst: &mut [u8]) {$/;"	f
write_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_f64<T: ByteOrder>(&mut self, n: f64) -> Result<()> {$/;"	f
write_f64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_f64(buf: &mut [u8], n: f64) {$/;"	f
write_f64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_f64_into(src: &[f64], dst: &mut [u8]) {$/;"	f
write_fmt	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn write_fmt(&mut self, args: fmt::Arguments) -> fmt::Result {$/;"	f
write_i128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i128<T: ByteOrder>(&mut self, n: i128) -> Result<()> {$/;"	f
write_i128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i128(buf: &mut [u8], n: i128) {$/;"	f
write_i128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i128_into(src: &[i128], dst: &mut [u8]) {$/;"	f
write_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i16<T: ByteOrder>(&mut self, n: i16) -> Result<()> {$/;"	f
write_i16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i16(buf: &mut [u8], n: i16) {$/;"	f
write_i16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i16_into(src: &[i16], dst: &mut [u8]) {$/;"	f
write_i24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i24<T: ByteOrder>(&mut self, n: i32) -> Result<()> {$/;"	f
write_i24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i24(buf: &mut [u8], n: i32) {$/;"	f
write_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i32<T: ByteOrder>(&mut self, n: i32) -> Result<()> {$/;"	f
write_i32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i32(buf: &mut [u8], n: i32) {$/;"	f
write_i32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i32_into(src: &[i32], dst: &mut [u8]) {$/;"	f
write_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i64<T: ByteOrder>(&mut self, n: i64) -> Result<()> {$/;"	f
write_i64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i64(buf: &mut [u8], n: i64) {$/;"	f
write_i64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_i64_into(src: &[i64], dst: &mut [u8]) {$/;"	f
write_i8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_i8(&mut self, n: i8) -> Result<()> {$/;"	f
write_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_int<T: ByteOrder>($/;"	f
write_int	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_int(buf: &mut [u8], n: i64, nbytes: usize) {$/;"	f
write_int128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_int128<T: ByteOrder>($/;"	f
write_int128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_int128(buf: &mut [u8], n: i128, nbytes: usize) {$/;"	f
write_little_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn write_little_endian() {$/;"	f
write_native_endian	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^                fn write_native_endian() {$/;"	f
write_num_bytes	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^macro_rules! write_num_bytes {$/;"	d
write_slice	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^macro_rules! write_slice {$/;"	d
write_slice_native	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^macro_rules! write_slice_native {$/;"	d
write_str	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/bytes.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_to	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  fn write_to() {$/;"	f
write_to	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn write_to<B: BufMut>(self, buf: &mut B) {$/;"	f
write_to	/Users/zhaoyao/src/github.com/zhaoyao/rustlabs/socks5/src/socks5.rs	/^    pub fn write_to<W: AsyncWrite + Send>(self, w: W) -> WriteBytes<W, Bytes> {$/;"	f
write_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u128<T: ByteOrder>(&mut self, n: u128) -> Result<()> {$/;"	f
write_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u128(buf: &mut [u8], n: u128) {$/;"	f
write_u128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u128(buf: &mut [u8], n: u128);$/;"	f
write_u128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u128_into(src: &[u128], dst: &mut [u8]) {$/;"	f
write_u128_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u128_into(src: &[u128], dst: &mut [u8]);$/;"	f
write_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u16<T: ByteOrder>(&mut self, n: u16) -> Result<()> {$/;"	f
write_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u16(buf: &mut [u8], n: u16) {$/;"	f
write_u16	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u16(buf: &mut [u8], n: u16);$/;"	f
write_u16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u16_into(src: &[u16], dst: &mut [u8]) {$/;"	f
write_u16_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u16_into(src: &[u16], dst: &mut [u8]);$/;"	f
write_u24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u24<T: ByteOrder>(&mut self, n: u32) -> Result<()> {$/;"	f
write_u24	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u24(buf: &mut [u8], n: u32) {$/;"	f
write_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u32<T: ByteOrder>(&mut self, n: u32) -> Result<()> {$/;"	f
write_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u32(buf: &mut [u8], n: u32) {$/;"	f
write_u32	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u32(buf: &mut [u8], n: u32);$/;"	f
write_u32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u32_into(src: &[u32], dst: &mut [u8]) {$/;"	f
write_u32_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u32_into(src: &[u32], dst: &mut [u8]);$/;"	f
write_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u64<T: ByteOrder>(&mut self, n: u64) -> Result<()> {$/;"	f
write_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u64(buf: &mut [u8], n: u64) {$/;"	f
write_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u64(buf: &mut [u8], n: u64);$/;"	f
write_u64	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/task_impl/std/data.rs	/^    fn write_u64(&mut self, u: u64) {$/;"	f
write_u64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u64_into(src: &[u64], dst: &mut [u8]) {$/;"	f
write_u64_into	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_u64_into(src: &[u64], dst: &mut [u8]);$/;"	f
write_u8	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_u8(&mut self, n: u8) -> Result<()> {$/;"	f
write_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_uint<T: ByteOrder>($/;"	f
write_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_uint(buf: &mut [u8], n: u64, nbytes: usize) {$/;"	f
write_uint	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_uint(buf: &mut [u8], n: u64, nbytes: usize);$/;"	f
write_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/io.rs	/^    fn write_uint128<T: ByteOrder>($/;"	f
write_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_uint128(buf: &mut [u8], n: u128, nbytes: usize) {$/;"	f
write_uint128	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.2.2/src/lib.rs	/^    fn write_uint128(buf: &mut [u8], n: u128, nbytes: usize);$/;"	f
writer	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.6/src/buf/buf_mut.rs	/^    fn writer(self) -> Writer<Self> where Self: Sized {$/;"	f
zip	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.21/src/stream/mod.rs	/^    fn zip<S>(self, other: S) -> Zip<Self, S>$/;"	f
zone_of	/Users/zhaoyao/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-0.9.3/src/rr/domain.rs	/^  pub fn zone_of(&self, name: &Self) -> bool {$/;"	f
